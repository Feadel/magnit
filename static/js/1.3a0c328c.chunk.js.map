{"version":3,"sources":["components/section-layout/SectionLayout.tsx","components/section-layout/index.ts","components/section-title/SectionTitle.tsx","components/section-title/index.ts","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/snackbar/Snackbar.tsx","components/snackbar/index.ts","components/centered-section-item/CenteredSectionItem.tsx","components/list/EmptyList.tsx","components/list/index.ts","containers/templates/TemplateList.tsx","containers/templates/CreateTemplate.tsx","containers/templates/EditTemplate.tsx","containers/templates/index.ts"],"names":["SectionLayout","_ref","children","Object","core_browser_esm","Grid","container","direction","css","_templateObject","__webpack_require__","d","__webpack_exports__","SectionLayout_SectionLayout","SectionTitle","title","item","Paper","square","_templateObject2","theme","paddingLeft","spacing","paddingRight","xs","Typography","variant","component","SectionTitle_SectionTitle","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","keys","length","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","Snackbar","messages","error","open","props","objectWithoutProperties","Snackbar_Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","SnackbarContent","background","colors","red","green","boxShadow","concat","message","Error","marginRight","CheckCircle","success","action","IconButton","color","onClick","Close","snackbar_Snackbar_Snackbar","CenteredSectionItem","EmptyList","button","description","CenteredSectionItem_CenteredSectionItem","justify","alignContent","marginBottom","align","black","fontWeight","fontSize","xLarge","secondary","larger","actionName","EmptyList_EmptyList","columns","sortable","label","TemplateList","context","useContext","AppContext","_useState","useState","_useState2","slicedToArray","rows","setRows","_useState3","redirect","to","_useState4","setRedirect","useEffect","getTemplates","courier","then","response","templates","map","template","objectSpread","createdAt","getFriendlyDate","Date","updatedAt","catch","console","empty","section_layout","es","noThrow","section_title","hidden","dist","Link","scheme","icons_dist","list","margin","lightGray","marginTop","padding","placeholder","fullWidth","borderRadius","radius","white","border","transition","cursor",":hover, :active","primary","div",":before, :after","input","data","onRowClick","row","_","isObject","has","get","CreateTemplate","setTemplate","setError","_useState5","_useState6","setOpen","_useState7","_useState8","_onAddAsset","asyncToGenerator","regenerator_default","a","mark","_callee","file","wrap","_context","prev","next","abrupt","uploadFile","filename","process","stop","apply","this","arguments","_onDeleteAsset","_callee2","_context2","deleteFile","createTemplate","maxWidth","maxTemplateWidth","position","opacity","pointerEvents","template_editor_dist","main","onChange","cloneDeep","onAddAsset","_x","onDeleteAsset","_x2","snackbar","event","reason","setTimeout","EditTemplate","templateId","getTemplate","updateTemplate","isEmpty","initialState","TemplateList_TemplateList","CreateTemplate_CreateTemplate","EditTemplate_EditTemplate"],"mappings":"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","file":"static/js/1.3a0c328c.chunk.js","sourcesContent":["/** @jsx jsx */\n\nimport { jsx, css } from \"@emotion/core\";\nimport * as React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nexport const SectionLayout: React.FC = ({ children }) => {\n    return (\n        <Grid\n            container\n            direction=\"column\"\n            css={css`\n                width: 100%;\n                min-height: 100vh;\n            `}\n        >\n            {children}\n        </Grid>\n    );\n};\n","export * from \"./SectionLayout\";\n","/** @jsx jsx */\n\nimport { css, jsx } from \"@emotion/core\";\nimport * as React from \"react\";\nimport { Grid, Paper, Typography } from \"@material-ui/core\";\n\ninterface ISectionTitleProps {\n    title: string;\n}\n\nexport const SectionTitle: React.FC<ISectionTitleProps> = ({ title, children }) => {\n    return (\n        <Grid\n            item\n            css={css`\n                height: var(--section-title-height);\n                box-shadow: 0 6px 20px rgba(220, 227, 235, 0.3);\n            `}\n        >\n            <Paper\n                square={true}\n                css={css`\n                    height: 100%;\n                    display: flex;\n                    align-items: center;\n                    box-shadow: none !important;\n                `}\n            >\n                <Grid\n                    container\n                    css={theme => ({\n                        paddingLeft: theme.spacing(4),\n                        paddingRight: theme.spacing(4),\n                    })}\n                >\n                    <Grid item xs>\n                        <Typography variant=\"h4\" component=\"div\">\n                            <span>{title}</span>\n                        </Typography>\n                    </Grid>\n                    {children}\n                </Grid>\n            </Paper>\n        </Grid>\n    );\n};\n","export * from \"./SectionTitle\";\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","/** @jsx jsx */\n\nimport * as React from \"react\";\nimport { IconButton, Snackbar as MaterialSnackbar, SnackbarContent } from \"@material-ui/core\";\nimport { css, jsx } from \"@emotion/core\";\nimport {\n    CheckCircle as CheckCircleIcon,\n    Close as CloseIcon,\n    Error as ErrorIcon,\n} from \"@material-ui/icons\";\n\ninterface ISnackbarProps {\n    messages: {\n        success: string;\n        error: string;\n    };\n    open: boolean;\n    error: boolean;\n\n    onClose?(event?: React.SyntheticEvent, reason?: string): void;\n}\n\nexport const Snackbar: React.FC<ISnackbarProps> = ({ messages, error, open, ...props }) => {\n    return (\n        <MaterialSnackbar\n            anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"right\",\n            }}\n            open={open}\n            autoHideDuration={2500}\n            onClose={props.onClose}\n        >\n            <SnackbarContent\n                css={theme => ({\n                    background: error ? theme.colors.red : theme.colors.green,\n                    boxShadow: `0 4px 8px ${error ? theme.colors.red : theme.colors.green}50`,\n                })}\n                message={\n                    <span\n                        css={css`\n                            display: flex;\n                            align-items: center;\n                        `}\n                    >\n                        {error ? (\n                            <ErrorIcon css={theme => ({ marginRight: theme.spacing(1) })} />\n                        ) : (\n                            <CheckCircleIcon css={theme => ({ marginRight: theme.spacing(1) })} />\n                        )}\n                        {error ? messages.error : messages.success}\n                    </span>\n                }\n                action={[\n                    <IconButton key=\"close\" color=\"inherit\" onClick={props.onClose}>\n                        <CloseIcon />\n                    </IconButton>,\n                ]}\n            />\n        </MaterialSnackbar>\n    );\n};\n","export * from \"./Snackbar\";\n","/** @jsx jsx */\n\nimport { css, jsx } from \"@emotion/core\";\nimport * as React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nexport const CenteredSectionItem: React.FC = ({ children }) => {\n    return (\n        <Grid\n            item\n            xs\n            css={css`\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                align-items: center;\n            `}\n        >\n            {children}\n        </Grid>\n    );\n};\n","/** @jsx jsx */\n\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { jsx } from \"@emotion/core\";\nimport { CenteredSectionItem } from \"components/centered-section-item\";\nimport * as React from \"react\";\n\ninterface IEmptyListProps {\n    title: string;\n    button: React.ReactNode;\n    actionName: string;\n    description?: string;\n}\n\nexport const EmptyList: React.FC<IEmptyListProps> = ({ title, button, description, ...props }) => {\n    return (\n        <CenteredSectionItem>\n            <Grid container justify=\"center\" alignContent=\"center\" direction=\"column\">\n                <Grid item css={theme => ({ marginBottom: theme.spacing(3) })}>\n                    <Typography\n                        component=\"div\"\n                        align=\"center\"\n                        css={theme => ({\n                            color: theme.colors.black,\n                            fontWeight: 500,\n                            fontSize: theme.fontSize.xLarge,\n                        })}\n                    >\n                        <span>{title}</span>\n                    </Typography>\n                </Grid>\n                <Grid item css={theme => ({ marginBottom: theme.spacing(3) })}>\n                    <Typography\n                        component=\"div\"\n                        align=\"center\"\n                        css={theme => ({\n                            color: theme.colors.secondary,\n                            fontSize: theme.colors.larger,\n                        })}\n                    >\n                        <div>{description || \"Для создания нажмите кнопку\"}</div>\n                        <div>{props.actionName}</div>\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <Grid container justify=\"center\" alignContent=\"center\">\n                        <Grid item>{button}</Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </CenteredSectionItem>\n    );\n};\n","export * from \"./EmptyList\";\n","/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport * as React from \"react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { SectionTitle } from \"components/section-title\";\nimport { SectionLayout } from \"components/section-layout\";\nimport { Link, Redirect } from \"@reach/router\";\nimport { Button, IColumn, InputField, TableWrapper } from \"@magnit/components\";\nimport { AddIcon } from \"@magnit/icons\";\nimport { EmptyList } from \"components/list\";\nimport { getTemplates } from \"services/api/templates\";\nimport { AppContext } from \"context\";\nimport { Grid, Paper, Typography } from \"@material-ui/core\";\nimport _ from \"lodash\";\nimport { getFriendlyDate } from \"@magnit/services\";\n\nconst columns: IColumn[] = [\n    { key: \"title\", sortable: true, label: \"Название шаблона\" },\n    { key: \"description\", label: \"Описание\" },\n    { key: \"createdAt\", label: \"Дата создания\" },\n    { key: \"updatedAt\", label: \"Дата редактирования\" },\n];\n\nexport const TemplateList: React.FC = () => {\n    const context = useContext(AppContext);\n    const [rows, setRows] = useState<object[]>([]);\n    const [redirect, setRedirect] = useState({ redirect: false, to: \"\" });\n\n    useEffect(() => {\n        getTemplates(context.courier)\n            .then(response => {\n                response.templates = response.templates.map(template => {\n                    return {\n                        ...template,\n                        createdAt: getFriendlyDate(new Date(template.createdAt)),\n                        updatedAt: getFriendlyDate(new Date(template.updatedAt)),\n                    };\n                });\n                setRows(response.templates);\n            })\n            .catch(console.error);\n    }, [context.courier]);\n\n    function onRowClick(row?: object) {\n        if (!_.isObject(row) || !_.has(row, \"id\")) {\n            return;\n        }\n        setRedirect({ redirect: true, to: _.get(row, \"id\") });\n    }\n\n    const empty = !rows.length;\n\n    return (\n        <SectionLayout>\n            {redirect.redirect && <Redirect to={`templates/edit/${redirect.to}`} noThrow />}\n            <SectionTitle title=\"Список шаблонов\">\n                <Grid item hidden={empty}>\n                    <Button component={Link} to=\"create\" variant=\"contained\" scheme=\"blue\">\n                        <AddIcon />\n                        <Typography>Создать шаблон</Typography>\n                    </Button>\n                </Grid>\n            </SectionTitle>\n            {empty && (\n                <EmptyList\n                    title={\"Шаблонов нет\"}\n                    actionName={\"Создать шаблон\"}\n                    button={\n                        <Button component={Link} to=\"create\" scheme=\"blue\">\n                            <AddIcon />\n                            <Typography>Создать шаблон</Typography>\n                        </Button>\n                    }\n                    description={\"Для создания шаблона нажмите кнопку\"}\n                />\n            )}\n            {!empty && (\n                <Paper\n                    square={true}\n                    css={theme => ({\n                        margin: theme.spacing(3),\n                        boxShadow: `0 0 ${theme.spacing(2)} ${theme.colors.lightGray} !important`,\n                    })}\n                >\n                    <Grid\n                        container\n                        direction=\"row\"\n                        css={theme => ({ marginTop: theme.spacing(2) })}\n                    >\n                        <Grid\n                            container\n                            direction=\"column\"\n                            css={theme => ({ padding: theme.spacing(3) })}\n                        >\n                            <Grid container direction=\"row\" spacing={2}>\n                                <Grid item xs>\n                                    <InputField\n                                        placeholder=\"Поиск ...\"\n                                        fullWidth\n                                        css={theme => ({\n                                            borderRadius: theme.radius(5),\n                                            background: theme.colors.white,\n                                            border: `1px solid ${theme.colors.lightGray}`,\n                                            transition: \"border 0.25s ease-in-out\",\n                                            cursor: \"pointer\",\n                                            \":hover, :active\": {\n                                                border: `1px solid ${theme.colors.primary}`,\n                                            },\n                                            div: {\n                                                \":before, :after\": {\n                                                    border: \"none !important\",\n                                                },\n                                            },\n                                            input: {\n                                                padding: `${theme.spacing(2)} ${theme.spacing(4)}`,\n                                            },\n                                        })}\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Grid item css={theme => ({ padding: theme.spacing(3) })}>\n                                <TableWrapper\n                                    columns={columns}\n                                    data={rows}\n                                    onRowClick={onRowClick}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            )}\n        </SectionLayout>\n    );\n};\n","/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { Button } from \"@magnit/components\";\nimport { CheckIcon } from \"@magnit/icons\";\nimport { TemplateEditor } from \"@magnit/template-editor\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { Redirect } from \"@reach/router\";\nimport { SectionLayout } from \"components/section-layout\";\nimport { SectionTitle } from \"components/section-title\";\nimport { Snackbar } from \"components/snackbar\";\nimport { AppContext } from \"context\";\nimport _ from \"lodash\";\nimport * as React from \"react\";\nimport { useContext, useState } from \"react\";\nimport { deleteFile, uploadFile } from \"services/api/assets\";\nimport { createTemplate } from \"services/api/templates\";\n\nexport const CreateTemplate: React.FC = () => {\n    const context = useContext(AppContext);\n    const [template, setTemplate] = useState<object>({});\n    const [error, setError] = useState(false); // success/error snackbar state\n    const [open, setOpen] = useState(false); // open/close snackbar\n    const [redirect, setRedirect] = useState(false);\n\n    function onTemplateChange(template: object) {\n        setTemplate(_.cloneDeep(template));\n    }\n\n    function onSnackbarClose(event?: React.SyntheticEvent, reason?: string) {\n        if (reason === \"clickaway\") {\n            return;\n        }\n        if (!error) {\n            setRedirect(true);\n        }\n        setOpen(false);\n        // wait till animation ends\n        setTimeout(() => setError(false), 100);\n    }\n\n    function onTemplateSave() {\n        createTemplate(context.courier, template)\n            .then(() => setOpen(true))\n            .catch(() => {\n                setOpen(true);\n                setError(true);\n            });\n    }\n\n    async function onAddAsset(file: File) {\n        return uploadFile(context.courier, file).then(response => ({\n            ...response,\n            filename: `${process.env.REACT_APP_BACKEND_URL}/${response.filename}`,\n        }));\n    }\n\n    async function onDeleteAsset(filename: string) {\n        return deleteFile(context.courier, filename);\n    }\n\n    return (\n        <SectionLayout>\n            {redirect && <Redirect to={\"/templates\"} noThrow />}\n            <SectionTitle title=\"Создание шаблона\">\n                <Grid item>\n                    <Button variant=\"contained\" scheme=\"green\" onClick={onTemplateSave}>\n                        <CheckIcon />\n                        <Typography>Сохранить</Typography>\n                    </Button>\n                </Grid>\n            </SectionTitle>\n            <Grid\n                css={theme => ({\n                    maxWidth: theme.maxTemplateWidth,\n                    margin: theme.spacing(4),\n                    position: \"relative\",\n                    opacity: open ? 0.5 : 1,\n                    transition: \"opacity 0.3s ease-in-out\",\n                    pointerEvents: open ? \"none\" : \"initial\",\n                })}\n            >\n                <TemplateEditor\n                    css={theme => ({ background: theme.colors.main })}\n                    onChange={onTemplateChange}\n                    onAddAsset={onAddAsset}\n                    onDeleteAsset={onDeleteAsset}\n                />\n            </Grid>\n            <Snackbar\n                open={open}\n                error={error}\n                onClose={onSnackbarClose}\n                messages={{\n                    success: \"Шаблон успешно сохранён!\",\n                    error: \"Ошибка сохранения шаблона!\",\n                }}\n            />\n        </SectionLayout>\n    );\n};\n","/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport * as React from \"react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { SectionLayout } from \"components/section-layout\";\nimport { SectionTitle } from \"components/section-title\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { ITemplate, TemplateEditor } from \"@magnit/template-editor\";\nimport { Button } from \"@magnit/components\";\nimport { CheckIcon } from \"@magnit/icons\";\nimport { deleteFile, getTemplate, updateTemplate, uploadFile } from \"services/api\";\nimport { AppContext } from \"context\";\nimport { Snackbar } from \"components/snackbar\";\nimport { Redirect } from \"@reach/router\";\nimport _ from \"lodash\";\n\ninterface IEditTemplateProps {\n    templateId: number;\n}\n\nexport const EditTemplate: React.FC<IEditTemplateProps> = ({ templateId }) => {\n    const context = useContext(AppContext);\n    const [template, setTemplate] = useState<object>({});\n    const [error, setError] = useState(false); // success/error snackbar state\n    const [open, setOpen] = useState(false); // open/close snackbar\n    const [redirect, setRedirect] = useState(false);\n\n    useEffect(() => {\n        getTemplate(context.courier, templateId)\n            .then(response => setTemplate(response.template))\n            .catch(console.error);\n    }, [context.courier, templateId]);\n\n    function onTemplateChange(template: object) {\n        setTemplate(_.cloneDeep(template));\n    }\n\n    function onSnackbarClose(event?: React.SyntheticEvent, reason?: string) {\n        if (reason === \"clickaway\") {\n            return;\n        }\n        if (!error) {\n            setRedirect(true);\n        }\n        setOpen(false);\n        // wait till animation ends\n        setTimeout(() => setError(false), 100);\n    }\n\n    function onTemplateSave() {\n        updateTemplate(context.courier, templateId, template)\n            .then(() => setOpen(true))\n            .catch(() => {\n                setOpen(true);\n                setError(true);\n            });\n    }\n\n    async function onAddAsset(file: File) {\n        return uploadFile(context.courier, file).then(response => ({\n            ...response,\n            filename: `${process.env.REACT_APP_BACKEND_URL}/${response.filename}`,\n        }));\n    }\n\n    async function onDeleteAsset(filename: string) {\n        return deleteFile(context.courier, filename);\n    }\n\n    return (\n        <SectionLayout>\n            {redirect && <Redirect to={\"/templates\"} noThrow />}\n            <SectionTitle title=\"Редактирование шаблона\">\n                <Grid item>\n                    <Button variant=\"contained\" scheme=\"blue\" onClick={onTemplateSave}>\n                        <CheckIcon />\n                        <Typography>Обновить</Typography>\n                    </Button>\n                </Grid>\n            </SectionTitle>\n            <Grid\n                css={theme => ({\n                    maxWidth: theme.maxTemplateWidth,\n                    margin: theme.spacing(4),\n                    position: \"relative\",\n                    opacity: open ? 0.5 : 1,\n                    transition: \"opacity 0.3s ease-in-out\",\n                    pointerEvents: open ? \"none\" : \"initial\",\n                })}\n            >\n                {!_.isEmpty(template) && (\n                    <TemplateEditor\n                        initialState={(template as unknown) as ITemplate}\n                        css={theme => ({ background: theme.colors.main })}\n                        onChange={onTemplateChange}\n                        onAddAsset={onAddAsset}\n                        onDeleteAsset={onDeleteAsset}\n                    />\n                )}\n            </Grid>\n            <Snackbar\n                open={open}\n                error={error}\n                onClose={onSnackbarClose}\n                messages={{\n                    success: \"Шаблон успешно обновлён!\",\n                    error: \"Ошибка обновления шаблона!\",\n                }}\n            />\n        </SectionLayout>\n    );\n};\n","export * from \"./TemplateList\";\nexport * from \"./CreateTemplate\";\nexport * from \"./EditTemplate\";\n"],"sourceRoot":""}