{"version":3,"sources":["../../../node_modules/@material-ui/icons/esm/utils/createSvgIcon.js","components/section-layout/SectionLayout.tsx","components/section-layout/index.ts","components/section-title/SectionTitle.tsx","components/section-title/index.ts","../../../node_modules/@material-ui/core/esm/Button/Button.js","../../../node_modules/@material-ui/icons/esm/Add.js","components/centered-section-item/CenteredSectionItem.tsx","containers/templates/Templates.tsx","containers/templates/index.ts"],"names":["__webpack_require__","d","__webpack_exports__","createSvgIcon","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","n","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_core_SvgIcon__WEBPACK_IMPORTED_MODULE_2__","path","displayName","Component","a","memo","forwardRef","props","ref","createElement","muiName","SectionLayout","_ref","children","Object","core_browser_esm","Grid","container","direction","css","_templateObject","SectionLayout_SectionLayout","SectionTitle","title","item","Paper","square","_templateObject2","elevation","theme","paddingLeft","spacing","paddingRight","xs","Typography","variant","component","SectionTitle_SectionTitle","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0___default","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","clsx__WEBPACK_IMPORTED_MODULE_4__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","_styles_colorManipulator__WEBPACK_IMPORTED_MODULE_6__","_ButtonBase__WEBPACK_IMPORTED_MODULE_7__","_utils_helpers__WEBPACK_IMPORTED_MODULE_8__","Button","classes","classNameProp","className","_props$color","color","_props$component","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","focusVisibleClassName","_props$fullWidth","fullWidth","_props$size","size","_props$type","type","_props$variant","other","text","outlined","contained","primary","secondary","root","textPrimary","textSecondary","outlinedPrimary","outlinedSecondary","containedPrimary","containedSecondary","concat","colorInherit","focusRipple","focusVisible","label","lineHeight","typography","button","boxSizing","minWidth","padding","borderRadius","shape","palette","transition","transitions","create","duration","short","&:hover","textDecoration","backgroundColor","action","hoverOpacity","@media (hover: none)","&$disabled","width","display","alignItems","justifyContent","main","border","getContrastText","grey","boxShadow","shadows","&$focusVisible","&:active","disabledBackground","A100","contrastText","dark","borderColor","sizeSmall","fontSize","pxToRem","sizeLarge","name","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_utils_createSvgIcon__WEBPACK_IMPORTED_MODULE_1__","Fragment","fill","CenteredSectionItem","Templates","section_layout","section_title","CenteredSectionItem_CenteredSectionItem","justify","alignContent","marginBottom","align","Link","to","aria-label","Add","alignmentBaseline","marginRight","Templates_Templates"],"mappings":"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","file":"static/js/5.eb577bbe.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return React.createElement(SvgIcon, _extends({}, props, {\n      ref: ref\n    }), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}","/** @jsx jsx */\n\nimport { jsx, css } from \"@emotion/core\";\nimport * as React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nexport const SectionLayout: React.FC = ({ children }) => {\n    return (\n        <Grid\n            container\n            direction=\"column\"\n            css={css`\n                width: 100%;\n                min-height: 100vh;\n            `}\n        >\n            {children}\n        </Grid>\n    );\n};\n","export * from \"./SectionLayout\";\n","/** @jsx jsx */\n\nimport { css, jsx } from \"@emotion/core\";\nimport * as React from \"react\";\nimport { Grid, Paper, Typography } from \"@material-ui/core\";\n\ninterface ISectionTitleProps {\n    title: string;\n}\n\nexport const SectionTitle: React.FC<ISectionTitleProps> = ({ title, children }) => {\n    return (\n        <Grid\n            item\n            css={css`\n                height: var(--section-title-height);\n            `}\n        >\n            <Paper\n                square={true}\n                css={css`\n                    height: 100%;\n                    display: flex;\n                    align-items: center;\n                `}\n                elevation={0}\n            >\n                <Grid\n                    container\n                    css={theme => ({\n                        paddingLeft: theme.spacing(4),\n                        paddingRight: theme.spacing(4),\n                    })}\n                >\n                    <Grid item xs>\n                        <Typography variant=\"h4\" component=\"div\">\n                            <span>{title}</span>\n                        </Typography>\n                    </Grid>\n                    {children}\n                </Grid>\n            </Paper>\n        </Grid>\n    );\n};\n","export * from \"./SectionTitle\";\n","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport { capitalize } from '../utils/helpers';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({\n      lineHeight: 1.75\n    }, theme.typography.button, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 16px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(fade(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(fade(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      },\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: '4px 8px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {\n      padding: '8px 24px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    }\n  };\n};\nvar Button = React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableFocusRipple\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"type\", \"variant\"]);\n\n  var text = variant === 'text';\n  var outlined = variant === 'outlined';\n  var contained = variant === 'contained';\n  var primary = color === 'primary';\n  var secondary = color === 'secondary';\n  var className = clsx(classes.root, classNameProp, text && [classes.text, primary && classes.textPrimary, secondary && classes.textSecondary], outlined && [classes.outlined, primary && classes.outlinedPrimary, secondary && classes.outlinedSecondary], contained && [classes.contained, primary && classes.containedPrimary, secondary && classes.containedSecondary], size !== 'medium' && classes[\"size\".concat(capitalize(size))], disabled && classes.disabled, fullWidth && classes.fullWidth, color === 'inherit' && classes.colorInherit);\n  return React.createElement(ButtonBase, _extends({\n    className: className,\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   * `disableRipple` must also be true.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['text', 'outlined', 'contained'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(React.Fragment, null, React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n})), 'Add');","/** @jsx jsx */\n\nimport { css, jsx } from \"@emotion/core\";\nimport * as React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nexport const CenteredSectionItem: React.FC = ({ children }) => {\n    return (\n        <Grid\n            item\n            xs\n            css={css`\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                align-items: center;\n            `}\n        >\n            {children}\n        </Grid>\n    );\n};\n","/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport * as React from \"react\";\nimport { Button, Grid, Typography } from \"@material-ui/core\";\nimport { SectionTitle } from \"components/section-title\";\nimport { SectionLayout } from \"components/section-layout\";\nimport { CenteredSectionItem } from \"components/centered-section-item\";\nimport { Add as AddIcon } from \"@material-ui/icons\";\nimport { Link } from \"@reach/router\";\n\nexport const Templates: React.FC = () => {\n    return (\n        <SectionLayout>\n            <SectionTitle title=\"Список шаблонов\" />\n            <CenteredSectionItem>\n                <Grid container justify=\"center\" alignContent=\"center\" direction=\"column\">\n                    <Grid item css={theme => ({ marginBottom: theme.spacing(3) })}>\n                        <Typography variant=\"h4\" component=\"div\" align=\"center\">\n                            <span>Шаблонов нет</span>\n                        </Typography>\n                    </Grid>\n                    <Grid item css={theme => ({ marginBottom: theme.spacing(3) })}>\n                        <Typography variant=\"subtitle1\" component=\"div\" align=\"center\">\n                            <span>Для создания шаблона нажмите кнопку</span>\n                        </Typography>\n                        <Typography variant=\"subtitle1\" component=\"div\" align=\"center\">\n                            <span>Создать шаблон</span>\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <Grid container justify=\"center\" alignContent=\"center\">\n                            <Grid item>\n                                <Button\n                                    component={Link}\n                                    to=\"/templates/create\"\n                                    aria-label=\"Создать шаблон\"\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                >\n                                    <AddIcon\n                                        alignmentBaseline=\"middle\"\n                                        css={theme => ({ marginRight: theme.spacing() })}\n                                    />\n                                    <span>Создать шаблон</span>\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </CenteredSectionItem>\n        </SectionLayout>\n    );\n};\n","export * from \"./Templates\";\n"],"sourceRoot":""}