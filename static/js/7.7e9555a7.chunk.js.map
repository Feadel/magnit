{"version":3,"sources":["components/section-layout/SectionLayout.tsx","components/section-layout/index.ts","components/section-title/SectionTitle.tsx","components/section-title/index.ts","containers/tasks/Tasks.tsx","components/route-matcher/RouteMatcher.tsx","containers/tasks/index.ts"],"names":["SectionLayout","_ref","children","Object","core_browser_esm","Grid","container","direction","css","theme","paddingBottom","spacing","width","minHeight","__webpack_require__","d","__webpack_exports__","SectionLayout_SectionLayout","SectionTitle","title","item","_templateObject","Paper","square","_templateObject2","paddingLeft","paddingRight","_templateObject3","Typography","variant","component","SectionTitle_SectionTitle","ETabIndex","ETabPath","RouteMatcher","routes","react","map","route","paths","path","es","key","props","match","render","Tasks","_tabTitleByPath","_useState","useState","_useState2","slicedToArray","tabIndex","setTabIndex","tabTitleByPath","defineProperty","ALL","NEW","SENT","IN_PROGRESS","DONE","REJECTED","OVERDUE","DEACTIVATED","section_layout","RouteMatcher_RouteMatcher","section_title","AppBar","position","Tabs","value","Tab","to","Link","label","Tasks_Tasks"],"mappings":"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","file":"static/js/7.7e9555a7.chunk.js","sourcesContent":["/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport * as React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nexport const SectionLayout: React.FC = ({ children }) => {\n    return (\n        <Grid\n            container\n            direction=\"column\"\n            css={theme => ({\n                paddingBottom: theme.spacing(15),\n                width: \"100%\",\n                minHeight: \"100vh\",\n            })}\n        >\n            {children}\n        </Grid>\n    );\n};\n","export * from \"./SectionLayout\";\n","/** @jsx jsx */\n\nimport { jsx, css } from \"@emotion/core\";\nimport * as React from \"react\";\nimport { Grid, Paper, Typography } from \"@material-ui/core\";\n\ninterface ISectionTitleProps {\n    title: string;\n}\n\nexport const SectionTitle: React.FC<ISectionTitleProps> = ({ title, children }) => {\n    return (\n        <Grid\n            item\n            css={css`\n                height: var(--section-title-height);\n            `}\n        >\n            <Paper\n                square={true}\n                css={css`\n                    height: 100%;\n                    display: flex;\n                    align-items: center;\n                `}\n            >\n                <Grid\n                    container\n                    css={theme => ({\n                        paddingLeft: theme.spacing(4),\n                        paddingRight: theme.spacing(4),\n                    })}\n                >\n                    <Grid\n                        item\n                        css={css`\n                            flex-grow: 1;\n                        `}\n                    >\n                        <Typography variant=\"h4\" component=\"div\">\n                            <span>{title}</span>\n                        </Typography>\n                    </Grid>\n                    {children}\n                </Grid>\n            </Paper>\n        </Grid>\n    );\n};\n","export * from \"./SectionTitle\";\n","/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { Grid, AppBar, Tabs, Tab } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { Link, RouteComponentProps } from \"@reach/router\";\nimport { useState } from \"react\";\nimport { RouteMatcher } from \"components/route-matcher\";\nimport { SectionLayout } from \"../../components/section-layout\";\nimport { SectionTitle } from \"../../components/section-title\";\n\nenum ETabIndex {\n    ALL = 0,\n    NEW,\n    SENT,\n    IN_PROGRESS,\n    DONE,\n    REJECTED,\n    OVERDUE,\n    DEACTIVATED,\n}\n\nenum ETabPath {\n    ALL = \"all\",\n    NEW = \"new\",\n    SENT = \"sent\",\n    IN_PROGRESS = \"in-progress\",\n    DONE = \"done\",\n    REJECTED = \"rejected\",\n    OVERDUE = \"overdue\",\n    DEACTIVATED = \"deactivated\",\n}\n\nexport const Tasks: React.FC<RouteComponentProps> = () => {\n    const [tabIndex, setTabIndex] = useState(0);\n    const tabTitleByPath = {\n        [ETabPath.ALL]: \"Все\",\n        [ETabPath.NEW]: \"Новые\",\n        [ETabPath.SENT]: \"Отправленные\",\n        [ETabPath.IN_PROGRESS]: \"В работе\",\n        [ETabPath.DONE]: \"Выполненные\",\n        [ETabPath.REJECTED]: \"Отозванные\",\n        [ETabPath.OVERDUE]: \"Просроченные\",\n        [ETabPath.DEACTIVATED]: \"Деактивированные\",\n    };\n\n    return (\n        <SectionLayout>\n            <RouteMatcher\n                routes={[\n                    {\n                        paths: [\"\", ETabPath.ALL],\n                        render: () => setTabIndex(ETabIndex.ALL),\n                    },\n                    {\n                        path: ETabPath.NEW,\n                        render: () => setTabIndex(ETabIndex.NEW),\n                    },\n                    {\n                        path: ETabPath.SENT,\n                        render: () => setTabIndex(ETabIndex.SENT),\n                    },\n                    {\n                        path: ETabPath.IN_PROGRESS,\n                        render: () => setTabIndex(ETabIndex.IN_PROGRESS),\n                    },\n                    {\n                        path: ETabPath.DONE,\n                        render: () => setTabIndex(ETabIndex.DONE),\n                    },\n                    {\n                        path: ETabPath.REJECTED,\n                        render: () => setTabIndex(ETabIndex.REJECTED),\n                    },\n                    {\n                        path: ETabPath.OVERDUE,\n                        render: () => setTabIndex(ETabIndex.OVERDUE),\n                    },\n                    {\n                        path: ETabPath.DEACTIVATED,\n                        render: () => setTabIndex(ETabIndex.DEACTIVATED),\n                    },\n                ]}\n            />\n            <SectionTitle title=\"Список заданий\" />\n            <Grid item>\n                <AppBar position=\"static\">\n                    <Tabs value={tabIndex} css={theme => ({ paddingLeft: theme.spacing(4) })}>\n                        <Tab\n                            to={ETabPath.ALL}\n                            component={Link}\n                            label={tabTitleByPath[ETabPath.ALL]}\n                        />\n                        <Tab\n                            to={ETabPath.NEW}\n                            component={Link}\n                            label={tabTitleByPath[ETabPath.NEW]}\n                        />\n                        <Tab\n                            to={ETabPath.SENT}\n                            component={Link}\n                            label={tabTitleByPath[ETabPath.SENT]}\n                        />\n                        <Tab\n                            to={ETabPath.IN_PROGRESS}\n                            component={Link}\n                            label={tabTitleByPath[ETabPath.IN_PROGRESS]}\n                        />\n                        <Tab\n                            to={ETabPath.DONE}\n                            component={Link}\n                            label={tabTitleByPath[ETabPath.DONE]}\n                        />\n                        <Tab\n                            to={ETabPath.REJECTED}\n                            component={Link}\n                            label={tabTitleByPath[ETabPath.REJECTED]}\n                        />\n                        <Tab\n                            to={ETabPath.OVERDUE}\n                            component={Link}\n                            label={tabTitleByPath[ETabPath.OVERDUE]}\n                        />\n                        <Tab\n                            to={ETabPath.DEACTIVATED}\n                            component={Link}\n                            label={tabTitleByPath[ETabPath.DEACTIVATED]}\n                        />\n                    </Tabs>\n                </AppBar>\n            </Grid>\n        </SectionLayout>\n    );\n};\n","/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport * as React from \"react\";\nimport { Match } from \"@reach/router\";\n\ninterface IRouteMatcherProps {\n    routes: Array<{\n        path?: string;\n        paths?: string[];\n        render: () => React.ReactNode | void;\n    }>;\n}\n\nexport const RouteMatcher: React.FC<IRouteMatcherProps> = ({ routes }) => {\n    return (\n        <React.Fragment>\n            {routes.map(route => {\n                if (typeof route.paths !== \"undefined\") {\n                    return route.paths.map(path => {\n                        return (\n                            <Match path={path} key={path}>\n                                {props => {\n                                    if (!props.match) {\n                                        return;\n                                    }\n                                    const component = route.render();\n                                    if (typeof component !== \"undefined\") {\n                                        return component;\n                                    }\n                                }}\n                            </Match>\n                        );\n                    });\n                }\n                if (typeof route.path !== \"undefined\") {\n                    return (\n                        <Match path={route.path} key={route.path}>\n                            {props => {\n                                if (!props.match) {\n                                    return;\n                                }\n                                const component = route.render();\n                                if (typeof component !== \"undefined\") {\n                                    return component;\n                                }\n                            }}\n                        </Match>\n                    );\n                }\n                return null;\n            })}\n        </React.Fragment>\n    );\n};\n","export * from \"./Tasks\";\n"],"sourceRoot":""}