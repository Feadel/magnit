{"version":3,"sources":["components/section-title/SectionTitle.tsx","components/section-title/index.ts","components/section-layout/SectionLayout.tsx","components/section-layout/index.ts","entities/ETaskStatus.ts","entities/index.ts","containers/task-info/TaskInfo.tsx","containers/task-info/CreateTask.tsx","containers/task-info/EditTask.tsx","containers/task-info/index.ts"],"names":["SectionTitle","_ref","title","children","Object","core_browser_esm","Grid","item","css","_templateObject","Paper","square","_templateObject2","container","theme","paddingLeft","spacing","paddingRight","xs","Typography","variant","component","__webpack_require__","d","__webpack_exports__","SectionTitle_SectionTitle","SectionLayout","direction","SectionLayout_SectionLayout","ETaskStatus","TaskInfo","steps","fontSize","large","content","normal","font","smaller","section_layout","section_title","dist","scheme","icon","icons_dist","margin","concat","maxWidth","maxTemplateWidth","position","padding","zIndex","focused","TaskInfo_Head","status","CHECKED","marginTop","TaskInfo_MainInfo","value","map","part","MainInfo","color","colors","secondary","textTransform","black","Head","_ref2","getColorByStatus","_ETaskStatus$IN_PROGR2","defineProperty","IN_PROGRESS","violet","darkYellow","DONE","green","DRAFT","key","width","height","borderRadius","display","background","_ETaskStatus$IN_PROGR","getTitleByStatus","CreateTask","CreateTask_TaskFieldContainer","label","placeholder","fullWidth","alignItems","index","TaskFieldContainer","EditTask","EditTask_TaskFieldContainer","marginLeft","TaskInfo_TaskInfo","CreateTask_CreateTask","EditTask_EditTask"],"mappings":"6kBAUO,IAAMA,EAA6C,SAAAC,GAAyB,IAAtBC,EAAsBD,EAAtBC,MAAOC,EAAeF,EAAfE,SAChE,OACIC,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CACIC,MAAI,EACJC,IAAKA,cAAFC,MAKHL,OAAAC,EAAA,IAAAD,CAACM,EAAA,EAAD,CACIC,QAAQ,EACRH,IAAKA,cAAFI,MAOHR,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CACIO,WAAS,EACTL,IAAK,SAAAM,GAAK,MAAK,CACXC,YAAaD,EAAME,QAAQ,GAC3BC,aAAcH,EAAME,QAAQ,MAGhCZ,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACW,IAAE,GACTd,OAAAC,EAAA,IAAAD,CAACe,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,OAC/BjB,OAAAC,EAAA,IAAAD,CAAA,YAAOF,KAGdC,MCxCrBmB,EAAAC,EAAAC,EAAA,sBAAAC,wNCMO,IAAMC,EAA0B,SAAAzB,GAAkB,IAAfE,EAAeF,EAAfE,SACtC,OACIC,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CACIO,WAAS,EACTc,UAAU,SACVnB,IAAKA,cAAFC,MAKFN,IChBbmB,EAAAC,EAAAC,EAAA,sBAAAI,sCCAO,IAAKC,yGCAZP,EAAAC,EAAAC,EAAA,sBAAAK,gICWaC,EAAqB,WAC9B,IAAMC,EAAQ,CACV,CACI7B,MACIE,OAAAC,EAAA,IAAAD,CAACe,EAAA,EAAD,CAAYX,IAAK,SAAAM,GAAK,MAAK,CAAEkB,SAAUlB,EAAMkB,SAASC,SAAtD,wKAIJC,QACI9B,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMO,WAAS,EAACc,UAAW,UACvBvB,OAAAC,EAAA,IAAAD,CAACe,EAAA,EAAD,CAAYX,IAAK,SAAAM,GAAK,MAAK,CAAEkB,SAAUlB,EAAMkB,SAASG,UAAtD,0FAGA/B,OAAAC,EAAA,IAAAD,CAACe,EAAA,EAAD,CAAYX,IAAK,SAAAM,GAAK,MAAK,CAAEkB,SAAUlB,EAAMsB,KAAKC,WAAlD,wGAgBhB,OACIjC,OAAAC,EAAA,IAAAD,CAACkC,EAAA,EAAD,KACIlC,OAAAC,EAAA,IAAAD,CAACmC,EAAA,EAAD,CAAcrC,MAAM,kHAChBE,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,GACNH,OAAAC,EAAA,IAAAD,CAACoC,EAAA,aAAD,CACIpB,QAAQ,YACRlB,MAAM,yDACNuC,OAAO,QACPC,KAAMtC,OAAAC,EAAA,IAAAD,CAACuC,EAAA,UAAD,MACNnC,IAAK,SAAAM,GAAK,MAAK,CAAE8B,OAAM,KAAAC,OAAO/B,EAAME,QAAQ,QAEhDZ,OAAAC,EAAA,IAAAD,CAACoC,EAAA,aAAD,CACIpB,QAAQ,YACRlB,MAAM,yDACNuC,OAAO,SACPC,KAAMtC,OAAAC,EAAA,IAAAD,CAACuC,EAAA,UAAD,MACNnC,IAAK,SAAAM,GAAK,MAAK,CAAE8B,OAAM,KAAAC,OAAO/B,EAAME,QAAQ,QAEhDZ,OAAAC,EAAA,IAAAD,CAACoC,EAAA,aAAD,CACIpB,QAAQ,YACRlB,MAAM,iFACNuC,OAAO,cACPC,KAAMtC,OAAAC,EAAA,IAAAD,CAACuC,EAAA,UAAD,MACNnC,IAAK,SAAAM,GAAK,MAAK,CAAE8B,OAAM,KAAAC,OAAO/B,EAAME,QAAQ,UAIxDZ,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CACIE,IAAK,SAAAM,GAAK,MAAK,CACXgC,SAAUhC,EAAMiC,iBAChBH,OAAQ9B,EAAME,QAAQ,GACtBgC,SAAU,cAGd5C,OAAAC,EAAA,IAAAD,CAACoC,EAAA,uBAAD,CACIhC,IAAK,SAAAM,GAAK,MAAK,CACXmC,QAASnC,EAAME,QAAQ,GACvBkC,OAAQ,OAEZC,SAAO,GAEP/C,OAAAC,EAAA,IAAAD,CAACgD,EAAD,CACIlD,MAAM,yNACNmD,OAAQxB,IAAYyB,UAExBlD,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMO,WAAS,EAACG,QAAS,GACrBZ,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACW,IAAE,EAACV,IAAK,SAAAM,GAAK,MAAK,CAAEyC,UAAWzC,EAAME,QAAQ,MACpDZ,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMO,WAAS,EAACc,UAAW,OACvBvB,OAAAC,EAAA,IAAAD,CAACoD,EAAD,CAAUtD,MAAM,iFAAgBuD,MAAM,eACtCrD,OAAAC,EAAA,IAAAD,CAACoD,EAAD,CACItD,MAAM,qEACNuD,MAAM,oKAGdrD,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CACIO,WAAS,EACTc,UAAW,MACXnB,IAAK,SAAAM,GAAK,MAAK,CAAEyC,UAAWzC,EAAME,QAAQ,MAE1CZ,OAAAC,EAAA,IAAAD,CAACoD,EAAD,CACItD,MAAM,uFACNuD,MAAM,8PAEVrD,OAAAC,EAAA,IAAAD,CAACoD,EAAD,CAAUtD,MAAM,kFAAiBuD,MAAM,mBAG/CrD,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACW,IAAE,GACTd,OAAAC,EAAA,IAAAD,CAACoC,EAAA,eAAD,CAAgBT,MAAOA,OA3EjC,CACV,CAAE7B,MAAO,0DACT,CAAEA,MAAO,yFACT,CAAEA,MAAO,4BACT,CAAEA,MAAO,6HACT,CAAEA,MAAO,mCA0EMwD,IAAI,SAAAC,GAAI,OACXvD,OAAAC,EAAA,IAAAD,CAACoC,EAAA,uBAAD,CAAwBhC,IAAK,SAAAM,GAAK,MAAK,CAAEmC,QAASnC,EAAME,QAAQ,MAC5DZ,OAAAC,EAAA,IAAAD,CAACgD,EAAD,CAAMlD,MAAOyD,EAAKzD,cAapC0D,EAAqC,SAAA3D,GAAsB,IAAnBC,EAAmBD,EAAnBC,MAAOuD,EAAYxD,EAAZwD,MACjD,OACIrD,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACW,IAAE,GACTd,OAAAC,EAAA,IAAAD,CAACe,EAAA,EAAD,CACIX,IAAK,SAAAM,GAAK,MAAK,CACX+C,MAAO/C,EAAMgD,OAAOC,UACpB/B,SAAUlB,EAAMkB,SAASK,QACzB2B,cAAe,eAGlB9D,GAELE,OAAAC,EAAA,IAAAD,CAACe,EAAA,EAAD,CACIX,IAAK,SAAAM,GAAK,MAAK,CACXkB,SAAUlB,EAAMkB,SAASG,OACzB0B,MAAO/C,EAAMgD,OAAOG,SAGvBR,KAWXS,EAA6B,SAAAC,GAAuB,IAApBjE,EAAoBiE,EAApBjE,MAAOmD,EAAac,EAAbd,OAUzC,SAASe,EAAiBtD,EAAYuC,GAA6B,IAAAgB,EAC/D,OAAOA,EAAA,GAAAjE,OAAAkE,EAAA,EAAAlE,CAAAiE,EACFxC,IAAY0C,YAAczD,EAAMgD,OAAOU,QADrCpE,OAAAkE,EAAA,EAAAlE,CAAAiE,EAEFxC,IAAYyB,QAAUxC,EAAMgD,OAAOW,YAFjCrE,OAAAkE,EAAA,EAAAlE,CAAAiE,EAGFxC,IAAY6C,KAAO5D,EAAMgD,OAAOa,OAH9BvE,OAAAkE,EAAA,EAAAlE,CAAAiE,EAIFxC,IAAY+C,MAAQ9D,EAAMgD,OAAOC,WAJ/BM,GAKLhB,GAGN,OACIjD,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMO,WAAS,EAACG,QAAS,EAAG6D,IAAK3E,GAC7BE,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CACIC,MAAI,EACJW,GAAI,GACJV,IAAK,SAAAM,GAAK,MAAK,CACXC,YAAaD,EAAME,QAAQ,GAC3BC,aAAcH,EAAME,QAAQ,MAGhCZ,OAAAC,EAAA,IAAAD,CAACe,EAAA,EAAD,CAAYX,IAAK,SAAAM,GAAK,MAAK,CAAEkB,SAAUlB,EAAMkB,SAASC,SAAW/B,MAElEmD,GACCjD,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,GACNH,OAAAC,EAAA,IAAAD,CAAA,QACII,IAAK,SAAAM,GAAK,MAAK,CACXgE,MAAOhE,EAAME,UACb+D,OAAQjE,EAAME,UACdgE,aAAc,MACdC,QAAS,eACTC,WAAYd,EAAiBtD,EAAOuC,GACpCT,OAAQ,qBAGhBxC,OAAAC,EAAA,IAAAD,CAAA,QACII,IAAK,SAAAM,GAAK,MAAK,CAAE+C,MAAOO,EAAiBtD,EAAOuC,MAE/CA,GA7CrB,SAA0BA,GAA6B,IAAA8B,EACnD,OAAOA,EAAA,GAAA/E,OAAAkE,EAAA,EAAAlE,CAAA+E,EACFtD,IAAY0C,YAAc,+CADxBnE,OAAAkE,EAAA,EAAAlE,CAAA+E,EAEFtD,IAAYyB,QAAU,iEAFpBlD,OAAAkE,EAAA,EAAAlE,CAAA+E,EAGFtD,IAAY6C,KAAO,0DAHjBtE,OAAAkE,EAAA,EAAAlE,CAAA+E,EAIFtD,IAAY+C,MAAQ,oDAJlBO,GAKL9B,GAuCyB+B,CAAiB/B,OCzLvCgC,EAAuB,WAGhC,OACIjF,OAAAC,EAAA,IAAAD,CAACkC,EAAA,EAAD,KACIlC,OAAAC,EAAA,IAAAD,CAACmC,EAAA,EAAD,CAAcrC,MAAM,+FAChBE,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,GACNH,OAAAC,EAAA,IAAAD,CAACoC,EAAA,aAAD,CACIpB,QAAQ,YACRlB,MAAM,yDACNuC,OAAO,QACPC,KAAMtC,OAAAC,EAAA,IAAAD,CAACuC,EAAA,UAAD,MACNnC,IAAK,SAAAM,GAAK,MAAK,CAAE8B,OAAM,KAAAC,OAAO/B,EAAME,QAAQ,QAEhDZ,OAAAC,EAAA,IAAAD,CAACoC,EAAA,aAAD,CACIpB,QAAQ,YACRlB,MAAM,yDACNuC,OAAO,SACPC,KAAMtC,OAAAC,EAAA,IAAAD,CAACuC,EAAA,UAAD,MACNnC,IAAK,SAAAM,GAAK,MAAK,CAAE8B,OAAM,KAAAC,OAAO/B,EAAME,QAAQ,UAIxDZ,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CACIE,IAAK,SAAAM,GAAK,MAAK,CACXgC,SAAUhC,EAAMiC,iBAChBH,OAAQ9B,EAAME,QAAQ,GACtBgC,SAAU,cAGd5C,OAAAC,EAAA,IAAAD,CAACoC,EAAA,uBAAD,CACIhC,IAAK,SAAAM,GAAK,MAAK,CACXmC,QAASnC,EAAME,QAAQ,GACvBkC,OAAQ,OAEZC,SAAO,GAEP/C,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMO,WAAS,EAACL,IAAK,SAAAM,GAAK,MAAK,CAAEmC,QAAO,KAAAJ,OAAO/B,EAAME,QAAQ,OACzDZ,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACW,GAAI,IACXd,OAAAC,EAAA,IAAAD,CAACe,EAAA,EAAD,CAAYX,IAAK,SAAAM,GAAK,MAAK,CAAEkB,SAAUlB,EAAMkB,SAASC,SAAtD,kHAIJ7B,OAAAC,EAAA,IAAAD,CAACkF,EAAD,CAAoBC,MAAM,+FACtBnF,OAAAC,EAAA,IAAAD,CAACoC,EAAA,WAAD,CAAYgD,YAAY,yIAA2BC,WAAS,KAEhErF,OAAAC,EAAA,IAAAD,CAACkF,EAAD,CAAoBC,MAAM,uEACtBnF,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMO,WAAS,EAACc,UAAU,MAAM+D,WAAW,WAAW1E,QAAS,GAC3DZ,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACW,IAAE,GACTd,OAAAC,EAAA,IAAAD,CAACoC,EAAA,WAAD,CAAYgD,YAAY,6HAAyBC,WAAS,KAE9DrF,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,GACNH,OAAAC,EAAA,IAAAD,CAACoC,EAAA,UAAD,CAAWgD,YAAY,6FAInCpF,OAAAC,EAAA,IAAAD,CAACkF,EAAD,CAAoBC,MAAM,wFACtBnF,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMO,WAAS,EAACc,UAAU,MAAM+D,WAAW,WAAW1E,QAAS,GAC3DZ,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACW,IAAE,GACTd,OAAAC,EAAA,IAAAD,CAACoC,EAAA,YAAD,CAAagD,YAAY,uCAASC,WAAS,KAE/CrF,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACW,IAAE,GACTd,OAAAC,EAAA,IAAAD,CAACoC,EAAA,YAAD,CAAagD,YAAY,uCAASC,WAAS,KAE/CrF,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACW,IAAE,GACTd,OAAAC,EAAA,IAAAD,CAACoC,EAAA,YAAD,CAAagD,YAAY,uCAASC,WAAS,KAE/CrF,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACW,IAAE,GACTd,OAAAC,EAAA,IAAAD,CAACoC,EAAA,YAAD,CAAagD,YAAY,iCAAQC,WAAS,OAItDrF,OAAAC,EAAA,IAAAD,CAACkF,EAAD,CAAoBC,MAAM,sEACtBnF,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACW,GAAI,GACXd,OAAAC,EAAA,IAAAD,CAACoC,EAAA,YAAD,CAAagD,YAAY,sHAAuBC,WAAS,QAzEvE,CAAC,CAAEvF,MAAO,2DA8ELwD,IAAI,SAACC,EAAMgC,GAAP,OACPvF,OAAAC,EAAA,IAAAD,CAACoC,EAAA,uBAAD,CACIhC,IAAK,SAAAM,GAAK,MAAK,CAAEmC,QAASnC,EAAME,QAAQ,KACxC6D,IAAKc,GAELvF,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMO,WAAS,EAACL,IAAK,SAAAM,GAAK,MAAK,CAAEmC,QAAO,KAAAJ,OAAO/B,EAAME,QAAQ,OACzDZ,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACW,GAAI,IACXd,OAAAC,EAAA,IAAAD,CAACe,EAAA,EAAD,CAAYX,IAAK,SAAAM,GAAK,MAAK,CAAEkB,SAAUlB,EAAMkB,SAASC,SACjD0B,EAAKzD,QAGdE,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACW,GAAI,IACXd,OAAAC,EAAA,IAAAD,CAACkF,EAAD,CAAoBC,MAAM,wCACtBnF,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACW,GAAI,GACXd,OAAAC,EAAA,IAAAD,CAACoC,EAAA,YAAD,CAAagD,YAAY,kFAAiBC,WAAS,cAgBrFG,EAAgD,SAAA3F,GAAyB,IAAtBsF,EAAsBtF,EAAtBsF,MAAOpF,EAAeF,EAAfE,SAC5D,OACIC,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CACIO,WAAS,EACTc,UAAU,MACVX,QAAS,EACT0E,WAAW,aACXlF,IAAK,SAAAM,GAAK,MAAK,CAAEyC,UAAWzC,EAAME,aAElCZ,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACW,GAAI,EAAGV,IAAK,SAAAM,GAAK,MAAK,CAAEyC,UAAWzC,EAAME,QAAQ,MACxDZ,OAAAC,EAAA,IAAAD,CAACe,EAAA,EAAD,CAAYE,UAAU,QAAQkE,IAElCnF,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACW,IAAE,GACRf,+LC1HV,IAAM0F,EAAqB,WAG9B,OACIzF,OAAAC,EAAA,IAAAD,CAACkC,EAAA,EAAD,KACIlC,OAAAC,EAAA,IAAAD,CAACmC,EAAA,EAAD,CAAcrC,MAAM,kHAChBE,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,GACNH,OAAAC,EAAA,IAAAD,CAACoC,EAAA,aAAD,CACIpB,QAAQ,YACRlB,MAAM,yDACNuC,OAAO,QACPC,KAAMtC,OAAAC,EAAA,IAAAD,CAACuC,EAAA,UAAD,MACNnC,IAAK,SAAAM,GAAK,MAAK,CAAE8B,OAAM,KAAAC,OAAO/B,EAAME,QAAQ,QAEhDZ,OAAAC,EAAA,IAAAD,CAACoC,EAAA,aAAD,CACIpB,QAAQ,WACRlB,MAAM,uCACNuC,OAAO,SACPC,KAAMtC,OAAAC,EAAA,IAAAD,CAACuC,EAAA,UAAD,MACNnC,IAAK,SAAAM,GAAK,MAAK,CAAE8B,OAAM,KAAAC,OAAO/B,EAAME,QAAQ,UAIxDZ,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CACIE,IAAK,SAAAM,GAAK,MAAK,CACXgC,SAAUhC,EAAMiC,iBAChBH,OAAQ9B,EAAME,QAAQ,GACtBgC,SAAU,cAGd5C,OAAAC,EAAA,IAAAD,CAACoC,EAAA,uBAAD,CACIhC,IAAK,SAAAM,GAAK,MAAK,CACXmC,QAASnC,EAAME,QAAQ,GACvBkC,OAAQ,OAEZC,SAAO,GAEP/C,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMO,WAAS,EAACL,IAAK,SAAAM,GAAK,MAAK,CAAEmC,QAAO,KAAAJ,OAAO/B,EAAME,QAAQ,OACzDZ,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACW,GAAI,IACXd,OAAAC,EAAA,IAAAD,CAACe,EAAA,EAAD,CAAYX,IAAK,SAAAM,GAAK,MAAK,CAAEkB,SAAUlB,EAAMkB,SAASC,SAAtD,kHAIJ7B,OAAAC,EAAA,IAAAD,CAAC0F,EAAD,CAAoBP,MAAM,+FACtBnF,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMO,WAAS,EAACc,UAAW,MAAO+D,WAAY,WAAY1E,QAAS,GAC/DZ,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACW,IAAE,GACTd,OAAAC,EAAA,IAAAD,CAACoC,EAAA,WAAD,CACIgD,YAAa,yIACbC,WAAS,OAKzBrF,OAAAC,EAAA,IAAAD,CAAC0F,EAAD,CAAoBP,MAAM,uEACtBnF,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMO,WAAS,EAACc,UAAW,MAAO+D,WAAY,WAAY1E,QAAS,GAC/DZ,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACW,IAAE,GACTd,OAAAC,EAAA,IAAAD,CAACoC,EAAA,WAAD,CAAYgD,YAAa,6HAA0BC,WAAS,KAEhErF,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,GACNH,OAAAC,EAAA,IAAAD,CAACoC,EAAA,UAAD,CAAWgD,YAAa,2FAE5BpF,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMO,WAAS,GACXT,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACW,IAAE,EAACV,IAAK,SAAAM,GAAK,MAAK,CAAEiF,WAAYjF,EAAME,aAC7CZ,OAAAC,EAAA,IAAAD,CAACoC,EAAA,aAAD,CACIpB,QAAQ,WACRlB,MAAM,4EACNuC,OAAO,cACPjC,IAAKA,cAAFC,KAGHiC,KAAMtC,OAAAC,EAAA,IAAAD,CAACuC,EAAA,QAAD,YAM1BvC,OAAAC,EAAA,IAAAD,CAAC0F,EAAD,CAAoBP,MAAM,wFACtBnF,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMO,WAAS,EAACc,UAAW,MAAO+D,WAAY,WAAY1E,QAAS,GAC/DZ,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACW,IAAE,GACTd,OAAAC,EAAA,IAAAD,CAACoC,EAAA,YAAD,CAAagD,YAAa,uCAAUC,WAAS,KAEjDrF,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACW,IAAE,GACTd,OAAAC,EAAA,IAAAD,CAACoC,EAAA,YAAD,CAAagD,YAAa,uCAAUC,WAAS,KAEjDrF,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACW,IAAE,GACTd,OAAAC,EAAA,IAAAD,CAACoC,EAAA,YAAD,CAAagD,YAAa,uCAAUC,WAAS,KAEjDrF,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACW,IAAE,GACTd,OAAAC,EAAA,IAAAD,CAACoC,EAAA,YAAD,CAAagD,YAAa,iCAASC,WAAS,OAIxDrF,OAAAC,EAAA,IAAAD,CAAC0F,EAAD,CAAoBP,MAAM,sEACtBnF,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACW,GAAI,GACXd,OAAAC,EAAA,IAAAD,CAACoC,EAAA,YAAD,CAAagD,YAAa,sHAAwBC,WAAS,QA7FzE,CAAC,CAAEvF,MAAO,2DAkGLwD,IAAI,SAACC,EAAMgC,GAAP,OACPvF,OAAAC,EAAA,IAAAD,CAACoC,EAAA,uBAAD,CACIhC,IAAK,SAAAM,GAAK,MAAK,CAAEmC,QAASnC,EAAME,QAAQ,KACxC6D,IAAKc,GAELvF,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMO,WAAS,EAACL,IAAK,SAAAM,GAAK,MAAK,CAAEmC,QAAO,KAAAJ,OAAO/B,EAAME,QAAQ,OACzDZ,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACW,GAAI,IACXd,OAAAC,EAAA,IAAAD,CAACe,EAAA,EAAD,CAAYX,IAAK,SAAAM,GAAK,MAAK,CAAEkB,SAAUlB,EAAMkB,SAASC,SACjD0B,EAAKzD,QAGdE,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACW,GAAI,IACXd,OAAAC,EAAA,IAAAD,CAAC0F,EAAD,CAAoBP,MAAM,wCACrB,IACDnF,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACW,GAAI,GACXd,OAAAC,EAAA,IAAAD,CAACoC,EAAA,YAAD,CAAagD,YAAa,kFAAkBC,WAAS,cAgBvFG,EAAgD,SAAA3F,GAAyB,IAAtBsF,EAAsBtF,EAAtBsF,MAAOpF,EAAeF,EAAfE,SAC5D,OACIC,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CACIO,WAAS,EACTc,UAAW,MACXX,QAAS,EACT0E,WAAY,aACZlF,IAAK,SAAAM,GAAK,MAAK,CAAEyC,UAAWzC,EAAME,aAElCZ,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACW,GAAI,EAAGV,IAAK,SAAAM,GAAK,MAAK,CAAEyC,UAAWzC,EAAME,QAAQ,MACxDZ,OAAAC,EAAA,IAAAD,CAACe,EAAA,EAAD,CAAYE,UAAW,QAASkE,IAEpCnF,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACW,IAAE,GACRf,KC/JjBmB,EAAAC,EAAAC,EAAA,6BAAAwE,IAAA1E,EAAAC,EAAAC,EAAA,+BAAAyE,IAAA3E,EAAAC,EAAAC,EAAA,6BAAA0E","file":"static/js/0.efab3196.chunk.js","sourcesContent":["/** @jsx jsx */\n\nimport { css, jsx } from \"@emotion/core\";\nimport * as React from \"react\";\nimport { Grid, Paper, Typography } from \"@material-ui/core\";\n\ninterface ISectionTitleProps {\n    title: string;\n}\n\nexport const SectionTitle: React.FC<ISectionTitleProps> = ({ title, children }) => {\n    return (\n        <Grid\n            item\n            css={css`\n                height: var(--section-title-height);\n                box-shadow: 0 6px 20px rgba(220, 227, 235, 0.3);\n            `}\n        >\n            <Paper\n                square={true}\n                css={css`\n                    height: 100%;\n                    display: flex;\n                    align-items: center;\n                    box-shadow: none !important;\n                `}\n            >\n                <Grid\n                    container\n                    css={theme => ({\n                        paddingLeft: theme.spacing(4),\n                        paddingRight: theme.spacing(4),\n                    })}\n                >\n                    <Grid item xs>\n                        <Typography variant=\"h4\" component=\"div\">\n                            <span>{title}</span>\n                        </Typography>\n                    </Grid>\n                    {children}\n                </Grid>\n            </Paper>\n        </Grid>\n    );\n};\n","export * from \"./SectionTitle\";\n","/** @jsx jsx */\n\nimport { jsx, css } from \"@emotion/core\";\nimport * as React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nexport const SectionLayout: React.FC = ({ children }) => {\n    return (\n        <Grid\n            container\n            direction=\"column\"\n            css={css`\n                width: 100%;\n                min-height: 100vh;\n            `}\n        >\n            {children}\n        </Grid>\n    );\n};\n","export * from \"./SectionLayout\";\n","export enum ETaskStatus {\n    IN_PROGRESS = \"in-progress\",\n    CHECKED = \"checked\",\n    DRAFT = \"draft\",\n    DONE = \"done\",\n}\n","export * from \"./ETaskStatus\";\n","/** @jsx jsx */\n\nimport * as React from \"react\";\nimport { jsx } from \"@emotion/core\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { SectionTitle } from \"components/section-title\";\nimport { SectionLayout } from \"components/section-layout\";\nimport { CustomButton, SelectableBlockWrapper, StepperWrapper } from \"@magnit/components\";\nimport { CheckIcon } from \"@magnit/icons\";\nimport { ETaskStatus } from \"../../entities\";\n\nexport const TaskInfo: React.FC = () => {\n    const steps = [\n        {\n            title: (\n                <Typography css={theme => ({ fontSize: theme.fontSize.large })}>\n                    Подготовка технического плана\n                </Typography>\n            ),\n            content: (\n                <Grid container direction={\"column\"}>\n                    <Typography css={theme => ({ fontSize: theme.fontSize.normal })}>\n                        до 07.07.2019 (просрочено)\n                    </Typography>\n                    <Typography css={theme => ({ fontSize: theme.font.smaller })}>\n                        История изменений\n                    </Typography>\n                </Grid>\n            ),\n        },\n    ];\n\n    const parts = [\n        { title: \"Документы\" },\n        { title: \"Ведомость работ\" },\n        { title: \"Бриф\" },\n        { title: \"Инженерное заключение\" },\n        { title: \"Смета\" },\n    ];\n\n    return (\n        <SectionLayout>\n            <SectionTitle title=\"Информация о задании\">\n                <Grid item>\n                    <CustomButton\n                        variant=\"contained\"\n                        title=\"Завершить\"\n                        scheme=\"green\"\n                        icon={<CheckIcon />}\n                        css={theme => ({ margin: `0 ${theme.spacing(1)}` })}\n                    />\n                    <CustomButton\n                        variant=\"contained\"\n                        title=\"Отправить\"\n                        scheme=\"violet\"\n                        icon={<CheckIcon />}\n                        css={theme => ({ margin: `0 ${theme.spacing(1)}` })}\n                    />\n                    <CustomButton\n                        variant=\"contained\"\n                        title=\"Редактировать\"\n                        scheme=\"blueOutline\"\n                        icon={<CheckIcon />}\n                        css={theme => ({ margin: `0 ${theme.spacing(1)}` })}\n                    />\n                </Grid>\n            </SectionTitle>\n            <Grid\n                css={theme => ({\n                    maxWidth: theme.maxTemplateWidth,\n                    margin: theme.spacing(4),\n                    position: \"relative\",\n                })}\n            >\n                <SelectableBlockWrapper\n                    css={theme => ({\n                        padding: theme.spacing(3),\n                        zIndex: 1300,\n                    })}\n                    focused\n                >\n                    <Head\n                        title=\"Хардкорное задание для суровых прорабов\"\n                        status={ETaskStatus.CHECKED}\n                    />\n                    <Grid container spacing={2}>\n                        <Grid item xs css={theme => ({ marginTop: theme.spacing(4) })}>\n                            <Grid container direction={\"row\"}>\n                                <MainInfo title=\"Администратор\" value=\"Andrey_555\" />\n                                <MainInfo\n                                    title=\"Исполнитель\"\n                                    value=\"Рукастый Иннокентий Петрович\"\n                                />\n                            </Grid>\n                            <Grid\n                                container\n                                direction={\"row\"}\n                                css={theme => ({ marginTop: theme.spacing(3) })}\n                            >\n                                <MainInfo\n                                    title=\"Местоположение\"\n                                    value=\"Челябинская область, Челябинск, улица Железная, 5\"\n                                />\n                                <MainInfo title=\"Формат объекта\" value=\"МК\" />\n                            </Grid>\n                        </Grid>\n                        <Grid item xs>\n                            <StepperWrapper steps={steps} />\n                        </Grid>\n                    </Grid>\n                </SelectableBlockWrapper>\n                {parts.map(part => (\n                    <SelectableBlockWrapper css={theme => ({ padding: theme.spacing(3) })}>\n                        <Head title={part.title} />\n                    </SelectableBlockWrapper>\n                ))}\n            </Grid>\n        </SectionLayout>\n    );\n};\n\ninterface IMainInfoProps {\n    title: string;\n    value: string;\n}\n\nconst MainInfo: React.FC<IMainInfoProps> = ({ title, value }) => {\n    return (\n        <Grid item xs>\n            <Typography\n                css={theme => ({\n                    color: theme.colors.secondary,\n                    fontSize: theme.fontSize.smaller,\n                    textTransform: \"uppercase\",\n                })}\n            >\n                {title}\n            </Typography>\n            <Typography\n                css={theme => ({\n                    fontSize: theme.fontSize.normal,\n                    color: theme.colors.black,\n                })}\n            >\n                {value}\n            </Typography>\n        </Grid>\n    );\n};\n\ninterface IHeadProps {\n    title: string;\n    status?: string;\n}\n\nconst Head: React.FC<IHeadProps> = ({ title, status }) => {\n    function getTitleByStatus(status: ETaskStatus): string {\n        return {\n            [ETaskStatus.IN_PROGRESS]: \"В работе\",\n            [ETaskStatus.CHECKED]: \"На проверке\",\n            [ETaskStatus.DONE]: \"Завершено\",\n            [ETaskStatus.DRAFT]: \"Черновик\",\n        }[status];\n    }\n\n    function getColorByStatus(theme: any, status: ETaskStatus): string {\n        return {\n            [ETaskStatus.IN_PROGRESS]: theme.colors.violet,\n            [ETaskStatus.CHECKED]: theme.colors.darkYellow,\n            [ETaskStatus.DONE]: theme.colors.green,\n            [ETaskStatus.DRAFT]: theme.colors.secondary,\n        }[status];\n    }\n\n    return (\n        <Grid container spacing={2} key={title}>\n            <Grid\n                item\n                xs={12}\n                css={theme => ({\n                    paddingLeft: theme.spacing(4),\n                    paddingRight: theme.spacing(4),\n                })}\n            >\n                <Typography css={theme => ({ fontSize: theme.fontSize.large })}>{title}</Typography>\n            </Grid>\n            {!!status && (\n                <Grid item>\n                    <span\n                        css={theme => ({\n                            width: theme.spacing(),\n                            height: theme.spacing(),\n                            borderRadius: \"50%\",\n                            display: \"inline-block\",\n                            background: getColorByStatus(theme, status as ETaskStatus),\n                            margin: \"2px 10px 2px 0\",\n                        })}\n                    />\n                    <span\n                        css={theme => ({ color: getColorByStatus(theme, status as ETaskStatus) })}\n                    >\n                        {status && getTitleByStatus(status as ETaskStatus)}\n                    </span>\n                </Grid>\n            )}\n        </Grid>\n    );\n};\n","/** @jsx jsx */\n\nimport * as React from \"react\";\nimport { SectionLayout } from \"components/section-layout\";\nimport { SectionTitle } from \"components/section-title\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { jsx } from \"@emotion/core\";\nimport {\n    CustomButton,\n    DateField,\n    InputField,\n    SelectableBlockWrapper,\n    SelectField,\n} from \"@magnit/components\";\nimport { CheckIcon } from \"@magnit/icons\";\n\nexport const CreateTask: React.FC = () => {\n    const parts = [{ title: \"Документы\" }];\n\n    return (\n        <SectionLayout>\n            <SectionTitle title=\"Создание задания\">\n                <Grid item>\n                    <CustomButton\n                        variant=\"contained\"\n                        title=\"Сохранить\"\n                        scheme=\"green\"\n                        icon={<CheckIcon />}\n                        css={theme => ({ margin: `0 ${theme.spacing(1)}` })}\n                    />\n                    <CustomButton\n                        variant=\"contained\"\n                        title=\"Отправить\"\n                        scheme=\"violet\"\n                        icon={<CheckIcon />}\n                        css={theme => ({ margin: `0 ${theme.spacing(1)}` })}\n                    />\n                </Grid>\n            </SectionTitle>\n            <Grid\n                css={theme => ({\n                    maxWidth: theme.maxTemplateWidth,\n                    margin: theme.spacing(4),\n                    position: \"relative\",\n                })}\n            >\n                <SelectableBlockWrapper\n                    css={theme => ({\n                        padding: theme.spacing(3),\n                        zIndex: 1300,\n                    })}\n                    focused\n                >\n                    <Grid container css={theme => ({ padding: `0 ${theme.spacing(4)}` })}>\n                        <Grid item xs={12}>\n                            <Typography css={theme => ({ fontSize: theme.fontSize.large })}>\n                                Основная информация\n                            </Typography>\n                        </Grid>\n                        <TaskFieldContainer label=\"Название задания\">\n                            <InputField placeholder=\"Введите название задания\" fullWidth />\n                        </TaskFieldContainer>\n                        <TaskFieldContainer label=\"Этап задания\">\n                            <Grid container direction=\"row\" alignItems=\"flex-end\" spacing={2}>\n                                <Grid item xs>\n                                    <InputField placeholder=\"Введите название этапа\" fullWidth />\n                                </Grid>\n                                <Grid item>\n                                    <DateField placeholder=\"Срок выполнения\" />\n                                </Grid>\n                            </Grid>\n                        </TaskFieldContainer>\n                        <TaskFieldContainer label=\"Местоположение\">\n                            <Grid container direction=\"row\" alignItems=\"flex-end\" spacing={2}>\n                                <Grid item xs>\n                                    <SelectField placeholder=\"Регион\" fullWidth />\n                                </Grid>\n                                <Grid item xs>\n                                    <SelectField placeholder=\"Филиал\" fullWidth />\n                                </Grid>\n                                <Grid item xs>\n                                    <SelectField placeholder=\"Формат\" fullWidth />\n                                </Grid>\n                                <Grid item xs>\n                                    <SelectField placeholder=\"Адрес\" fullWidth />\n                                </Grid>\n                            </Grid>\n                        </TaskFieldContainer>\n                        <TaskFieldContainer label=\"Исполнитель\">\n                            <Grid item xs={4}>\n                                <SelectField placeholder=\"Выберите исполнителя\" fullWidth />\n                            </Grid>\n                        </TaskFieldContainer>\n                    </Grid>\n                </SelectableBlockWrapper>\n                {parts.map((part, index) => (\n                    <SelectableBlockWrapper\n                        css={theme => ({ padding: theme.spacing(3) })}\n                        key={index}\n                    >\n                        <Grid container css={theme => ({ padding: `0 ${theme.spacing(4)}` })}>\n                            <Grid item xs={12}>\n                                <Typography css={theme => ({ fontSize: theme.fontSize.large })}>\n                                    {part.title}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TaskFieldContainer label=\"Шаблон\">\n                                    <Grid item xs={3}>\n                                        <SelectField placeholder=\"Выбрать шаблон\" fullWidth />\n                                    </Grid>\n                                </TaskFieldContainer>\n                            </Grid>\n                        </Grid>\n                    </SelectableBlockWrapper>\n                ))}\n            </Grid>\n        </SectionLayout>\n    );\n};\n\ninterface ITaskFieldProps {\n    label: string;\n}\n\nconst TaskFieldContainer: React.FC<ITaskFieldProps> = ({ label, children }) => {\n    return (\n        <Grid\n            container\n            direction=\"row\"\n            spacing={2}\n            alignItems=\"flex-start\"\n            css={theme => ({ marginTop: theme.spacing() })}\n        >\n            <Grid item xs={2} css={theme => ({ marginTop: theme.spacing(2) })}>\n                <Typography component=\"span\">{label}</Typography>\n            </Grid>\n            <Grid item xs>\n                {children}\n            </Grid>\n        </Grid>\n    );\n};\n","/** @jsx jsx */\n\nimport * as React from \"react\";\nimport { SectionLayout } from \"components/section-layout\";\nimport { SectionTitle } from \"components/section-title\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { jsx, css } from \"@emotion/core\";\nimport {\n    CustomButton,\n    DateField,\n    InputField,\n    SelectableBlockWrapper,\n    SelectField,\n} from \"@magnit/components\";\nimport { AddIcon, CheckIcon } from \"@magnit/icons\";\n\nexport const EditTask: React.FC = () => {\n    const parts = [{ title: \"Документы\" }];\n\n    return (\n        <SectionLayout>\n            <SectionTitle title=\"Информация о задании\">\n                <Grid item>\n                    <CustomButton\n                        variant=\"contained\"\n                        title=\"Сохранить\"\n                        scheme=\"green\"\n                        icon={<CheckIcon />}\n                        css={theme => ({ margin: `0 ${theme.spacing(1)}` })}\n                    />\n                    <CustomButton\n                        variant=\"outlined\"\n                        title=\"Отмена\"\n                        scheme=\"violet\"\n                        icon={<CheckIcon />}\n                        css={theme => ({ margin: `0 ${theme.spacing(1)}` })}\n                    />\n                </Grid>\n            </SectionTitle>\n            <Grid\n                css={theme => ({\n                    maxWidth: theme.maxTemplateWidth,\n                    margin: theme.spacing(4),\n                    position: \"relative\",\n                })}\n            >\n                <SelectableBlockWrapper\n                    css={theme => ({\n                        padding: theme.spacing(3),\n                        zIndex: 1300,\n                    })}\n                    focused\n                >\n                    <Grid container css={theme => ({ padding: `0 ${theme.spacing(4)}` })}>\n                        <Grid item xs={12}>\n                            <Typography css={theme => ({ fontSize: theme.fontSize.large })}>\n                                Основная информация\n                            </Typography>\n                        </Grid>\n                        <TaskFieldContainer label=\"Название задания\">\n                            <Grid container direction={\"row\"} alignItems={\"flex-end\"} spacing={2}>\n                                <Grid item xs>\n                                    <InputField\n                                        placeholder={\"Введите название задания\"}\n                                        fullWidth\n                                    />\n                                </Grid>\n                            </Grid>\n                        </TaskFieldContainer>\n                        <TaskFieldContainer label=\"Этап задания\">\n                            <Grid container direction={\"row\"} alignItems={\"flex-end\"} spacing={2}>\n                                <Grid item xs>\n                                    <InputField placeholder={\"Введите название этапа\"} fullWidth />\n                                </Grid>\n                                <Grid item>\n                                    <DateField placeholder={\"Срок выполнения\"} />\n                                </Grid>\n                                <Grid container>\n                                    <Grid item xs css={theme => ({ marginLeft: theme.spacing() })}>\n                                        <CustomButton\n                                            variant=\"outlined\"\n                                            title=\"Добавить этап\"\n                                            scheme=\"blueOutline\"\n                                            css={css`\n                                                width: 180px;\n                                            `}\n                                            icon={<AddIcon />}\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </TaskFieldContainer>\n                        <TaskFieldContainer label=\"Местоположение\">\n                            <Grid container direction={\"row\"} alignItems={\"flex-end\"} spacing={2}>\n                                <Grid item xs>\n                                    <SelectField placeholder={\"Регион\"} fullWidth />\n                                </Grid>\n                                <Grid item xs>\n                                    <SelectField placeholder={\"Филиал\"} fullWidth />\n                                </Grid>\n                                <Grid item xs>\n                                    <SelectField placeholder={\"Формат\"} fullWidth />\n                                </Grid>\n                                <Grid item xs>\n                                    <SelectField placeholder={\"Адрес\"} fullWidth />\n                                </Grid>\n                            </Grid>\n                        </TaskFieldContainer>\n                        <TaskFieldContainer label=\"Исполнитель\">\n                            <Grid item xs={4}>\n                                <SelectField placeholder={\"Выберите исполнителя\"} fullWidth />\n                            </Grid>\n                        </TaskFieldContainer>\n                    </Grid>\n                </SelectableBlockWrapper>\n                {parts.map((part, index) => (\n                    <SelectableBlockWrapper\n                        css={theme => ({ padding: theme.spacing(3) })}\n                        key={index}\n                    >\n                        <Grid container css={theme => ({ padding: `0 ${theme.spacing(4)}` })}>\n                            <Grid item xs={12}>\n                                <Typography css={theme => ({ fontSize: theme.fontSize.large })}>\n                                    {part.title}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TaskFieldContainer label=\"Шаблон\">\n                                    {\" \"}\n                                    <Grid item xs={3}>\n                                        <SelectField placeholder={\"Выбрать шаблон\"} fullWidth />\n                                    </Grid>\n                                </TaskFieldContainer>\n                            </Grid>\n                        </Grid>\n                    </SelectableBlockWrapper>\n                ))}\n            </Grid>\n        </SectionLayout>\n    );\n};\n\ninterface ITaskFieldProps {\n    label: string;\n}\n\nconst TaskFieldContainer: React.FC<ITaskFieldProps> = ({ label, children }) => {\n    return (\n        <Grid\n            container\n            direction={\"row\"}\n            spacing={2}\n            alignItems={\"flex-start\"}\n            css={theme => ({ marginTop: theme.spacing() })}\n        >\n            <Grid item xs={2} css={theme => ({ marginTop: theme.spacing(2) })}>\n                <Typography component={\"span\"}>{label}</Typography>\n            </Grid>\n            <Grid item xs>\n                {children}\n            </Grid>\n        </Grid>\n    );\n};\n","export * from \"./TaskInfo\";\nexport * from \"./CreateTask\";\nexport * from \"./EditTask\";\n"],"sourceRoot":""}