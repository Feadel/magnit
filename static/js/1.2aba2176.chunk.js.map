{"version":3,"sources":["entities/ETaskStatus.ts","containers/tasks/TasksList.tsx","containers/tasks/CreateTask.tsx","containers/tasks/EditTask.tsx","containers/tasks/ViewTask.tsx","containers/tasks/index.ts"],"names":["ETaskStatus","tabs","value","IN_PROGRESS","label","CHECKED","DRAFT","DONE","columns","id","rows","title","region","address","step","TasksList","empty","length","Object","core_browser_esm","section_layout","section_title","Grid","item","hidden","dist","component","Link","to","variant","scheme","icon","icons_dist","css","_templateObject","list","actionName","button","_templateObject2","description","Paper","square","theme","margin","spacing","boxShadow","concat","colors","lightGray","container","direction","marginTop","baseUrl","padding","xs","placeholder","fullWidth","borderRadius","radius","background","white","border","transition","cursor",":hover, :active","primary","div",":before, :after","input","data","CreateTask","maxWidth","maxTemplateWidth","position","zIndex","focused","Typography","fontSize","large","CreateTask_TaskFieldContainer","alignItems","map","part","index","key","TaskFieldContainer","_ref","children","EditTask","EditTask_TaskFieldContainer","marginLeft","EditTask_templateObject","ViewTask","steps","content","normal","smaller","completed","ViewTask_Head","status","ViewTask_MainInfo","MainInfo","color","secondary","textTransform","black","Head","_ref2","getColorByStatus","_ETaskStatus$IN_PROGR2","defineProperty","violet","darkYellow","green","paddingLeft","paddingRight","width","height","display","_ETaskStatus$IN_PROGR","getTitleByStatus","__webpack_require__","d","__webpack_exports__","TasksList_TasksList","CreateTask_CreateTask","EditTask_EditTask","ViewTask_ViewTask"],"mappings":"qGAAYA,8dCqBZ,IAAMC,EAAe,CACjB,CAAEC,MAAOF,EAAYG,YAAaC,MAAO,+CACzC,CAAEF,MAAOF,EAAYK,QAASD,MAAO,iEACrC,CAAEF,MAAOF,EAAYM,MAAOF,MAAO,0DACnC,CAAEF,MAAOF,EAAYO,KAAMH,MAAO,uEAGhCI,EAAqB,CACvB,CAAEC,GAAI,QAASL,MAAO,+FACtB,CAAEK,GAAI,SAAUL,MAAO,wCACvB,CAAEK,GAAI,cAAeL,MAAO,wCAC5B,CAAEK,GAAI,UAAWL,MAAO,6EACxB,CAAEK,GAAI,OAAQL,MAAO,4BACrB,CAAEK,GAAI,OAAQL,MAAO,0FAGnBM,EAAiB,CACnB,CACIC,MAAO,+CACPC,OAAQ,8CACRC,QAAS,sMACTC,KAAM,GAEV,CACIH,MAAO,+CACPC,OAAQ,8CACRC,QAAS,sMACTC,KAAM,GAEV,CACIH,MAAO,+CACPC,OAAQ,8CACRC,QAAS,sMACTC,KAAM,IAIDC,EAA2C,WACpD,IAAMC,GAASN,EAAKO,OAEpB,OACIC,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,KACIF,OAAAC,EAAA,IAAAD,CAACG,EAAA,EAAD,CAAcV,MAAM,mFAChBO,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,EAACC,OAAQR,GACfE,OAAAC,EAAA,IAAAD,CAACO,EAAA,aAAD,CACIC,UAAWC,IACXC,GAAG,SACHC,QAAQ,YACRlB,MAAM,wFACNmB,OAAO,OACPC,KAAMb,OAAAC,EAAA,IAAAD,CAACc,EAAA,QAAD,MACNC,IAAKA,cAAFC,SAMdlB,GACGE,OAAAC,EAAA,IAAAD,CAACiB,EAAA,EAAD,CACIxB,MAAM,gEACNyB,WAAW,wFACXC,OACInB,OAAAC,EAAA,IAAAD,CAACO,EAAA,aAAD,CACIC,UAAWC,IACXC,GAAG,SACHG,KAAMb,OAAAC,EAAA,IAAAD,CAACc,EAAA,QAAD,MACNrB,MAAM,wFACNsB,IAAKA,cAAFK,OAKXC,YAAY,oMAGlBvB,GACEE,OAAAC,EAAA,IAAAD,CAACsB,EAAA,EAAD,CACIC,QAAQ,EACRR,IAAK,SAAAS,GAAK,MAAK,CACXC,OAAQD,EAAME,QAAQ,GACtBC,UAAS,WAAAC,OAAaJ,EAAME,QAAQ,GAA3B,KAAAE,OACLJ,EAAMK,OAAOC,UADR,kBAKb9B,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CACI2B,WAAS,EACTC,UAAU,MACVjB,IAAK,SAAAS,GAAK,MAAK,CAAES,UAAWT,EAAME,QAAQ,MAE1C1B,OAAAC,EAAA,IAAAD,CAACO,EAAA,YAAD,CAAaxB,KAAMA,EAAMmD,QAAQ,SAC7BlC,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CACI2B,WAAS,EACTC,UAAU,SACVjB,IAAK,SAAAS,GAAK,MAAK,CAAEW,QAASX,EAAME,QAAQ,MAExC1B,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAM2B,WAAS,EAACC,UAAU,MAAMN,QAAS,GACrC1B,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,EAAC+B,IAAE,GACTpC,OAAAC,EAAA,IAAAD,CAACO,EAAA,WAAD,CACI8B,YAAY,qCACZC,WAAS,EACTvB,IAAK,SAAAS,GAAK,MAAK,CACXe,aAAcf,EAAMgB,OAAO,GAC3BC,WAAYjB,EAAMK,OAAOa,MACzBC,OAAM,aAAAf,OAAeJ,EAAMK,OAAOC,WAClCc,WAAY,2BACZC,OAAQ,UACRC,kBAAmB,CACfH,OAAM,aAAAf,OAAeJ,EAAMK,OAAOkB,UAEtCC,IAAK,CACDC,kBAAmB,CACfN,OAAQ,oBAGhBO,MAAO,CACHf,QAAO,GAAAP,OAAKJ,EAAME,QAAQ,GAAnB,KAAAE,OAAyBJ,EAAME,QAClC,UAMpB1B,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,EAAC+B,GAAI,GACXpC,OAAAC,EAAA,IAAAD,CAACO,EAAA,YAAD,CAAa8B,YAAY,wFAAkBC,WAAS,KAExDtC,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,EAAC+B,GAAI,GACXpC,OAAAC,EAAA,IAAAD,CAACO,EAAA,YAAD,CAAa8B,YAAY,wFAAkBC,WAAS,MAG5DtC,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,EAACU,IAAK,SAAAS,GAAK,MAAK,CAAEW,QAASX,EAAME,QAAQ,MAC/C1B,OAAAC,EAAA,IAAAD,CAACO,EAAA,aAAD,CAAcjB,QAASA,EAAS6D,KAAM3D,oBCxI7D4D,EAAuB,WAGhC,OACIpD,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,KACIF,OAAAC,EAAA,IAAAD,CAACG,EAAA,EAAD,CAAcV,MAAM,+FAChBO,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,GACNL,OAAAC,EAAA,IAAAD,CAACO,EAAA,aAAD,CACII,QAAQ,YACRlB,MAAM,yDACNmB,OAAO,QACPC,KAAMb,OAAAC,EAAA,IAAAD,CAACc,EAAA,UAAD,MACNC,IAAK,SAAAS,GAAK,MAAK,CAAEC,OAAM,KAAAG,OAAOJ,EAAME,QAAQ,QAEhD1B,OAAAC,EAAA,IAAAD,CAACO,EAAA,aAAD,CACII,QAAQ,YACRlB,MAAM,yDACNmB,OAAO,SACPC,KAAMb,OAAAC,EAAA,IAAAD,CAACc,EAAA,UAAD,MACNC,IAAK,SAAAS,GAAK,MAAK,CAAEC,OAAM,KAAAG,OAAOJ,EAAME,QAAQ,UAIxD1B,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CACIW,IAAK,SAAAS,GAAK,MAAK,CACX6B,SAAU7B,EAAM8B,iBAChB7B,OAAQD,EAAME,QAAQ,GACtB6B,SAAU,cAGdvD,OAAAC,EAAA,IAAAD,CAACO,EAAA,uBAAD,CACIQ,IAAK,SAAAS,GAAK,MAAK,CACXW,QAASX,EAAME,QAAQ,GACvB8B,OAAQ,OAEZC,SAAO,GAEPzD,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAM2B,WAAS,EAAChB,IAAK,SAAAS,GAAK,MAAK,CAAEW,QAAO,KAAAP,OAAOJ,EAAME,QAAQ,OACzD1B,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,EAAC+B,GAAI,IACXpC,OAAAC,EAAA,IAAAD,CAAC0D,EAAA,EAAD,CAAY3C,IAAK,SAAAS,GAAK,MAAK,CAAEmC,SAAUnC,EAAMmC,SAASC,SAAtD,kHAIJ5D,OAAAC,EAAA,IAAAD,CAAC6D,EAAD,CAAoB3E,MAAM,+FACtBc,OAAAC,EAAA,IAAAD,CAACO,EAAA,WAAD,CAAY8B,YAAY,yIAA2BC,WAAS,KAEhEtC,OAAAC,EAAA,IAAAD,CAAC6D,EAAD,CAAoB3E,MAAM,uEACtBc,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAM2B,WAAS,EAACC,UAAU,MAAM8B,WAAW,WAAWpC,QAAS,GAC3D1B,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,EAAC+B,IAAE,GACTpC,OAAAC,EAAA,IAAAD,CAACO,EAAA,WAAD,CAAY8B,YAAY,6HAAyBC,WAAS,KAE9DtC,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,GACNL,OAAAC,EAAA,IAAAD,CAACO,EAAA,UAAD,CAAW8B,YAAY,6FAInCrC,OAAAC,EAAA,IAAAD,CAAC6D,EAAD,CAAoB3E,MAAM,wFACtBc,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAM2B,WAAS,EAACC,UAAU,MAAM8B,WAAW,WAAWpC,QAAS,GAC3D1B,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,EAAC+B,IAAE,GACTpC,OAAAC,EAAA,IAAAD,CAACO,EAAA,YAAD,CAAa8B,YAAY,uCAASC,WAAS,KAE/CtC,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,EAAC+B,IAAE,GACTpC,OAAAC,EAAA,IAAAD,CAACO,EAAA,YAAD,CAAa8B,YAAY,uCAASC,WAAS,KAE/CtC,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,EAAC+B,IAAE,GACTpC,OAAAC,EAAA,IAAAD,CAACO,EAAA,YAAD,CAAa8B,YAAY,uCAASC,WAAS,KAE/CtC,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,EAAC+B,IAAE,GACTpC,OAAAC,EAAA,IAAAD,CAACO,EAAA,YAAD,CAAa8B,YAAY,iCAAQC,WAAS,OAItDtC,OAAAC,EAAA,IAAAD,CAAC6D,EAAD,CAAoB3E,MAAM,sEACtBc,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,EAAC+B,GAAI,GACXpC,OAAAC,EAAA,IAAAD,CAACO,EAAA,YAAD,CAAa8B,YAAY,sHAAuBC,WAAS,QAzEvE,CAAC,CAAE7C,MAAO,2DA8ELsE,IAAI,SAACC,EAAMC,GAAP,OACPjE,OAAAC,EAAA,IAAAD,CAACO,EAAA,uBAAD,CACIQ,IAAK,SAAAS,GAAK,MAAK,CAAEW,QAASX,EAAME,QAAQ,KACxCwC,IAAKD,GAELjE,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAM2B,WAAS,EAAChB,IAAK,SAAAS,GAAK,MAAK,CAAEW,QAAO,KAAAP,OAAOJ,EAAME,QAAQ,OACzD1B,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,EAAC+B,GAAI,IACXpC,OAAAC,EAAA,IAAAD,CAAC0D,EAAA,EAAD,CAAY3C,IAAK,SAAAS,GAAK,MAAK,CAAEmC,SAAUnC,EAAMmC,SAASC,SACjDI,EAAKvE,QAGdO,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,EAAC+B,GAAI,IACXpC,OAAAC,EAAA,IAAAD,CAAC6D,EAAD,CAAoB3E,MAAM,wCACtBc,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,EAAC+B,GAAI,GACXpC,OAAAC,EAAA,IAAAD,CAACO,EAAA,YAAD,CAAa8B,YAAY,kFAAiBC,WAAS,cAgBrF6B,EAAgD,SAAAC,GAAyB,IAAtBlF,EAAsBkF,EAAtBlF,MAAOmF,EAAeD,EAAfC,SAC5D,OACIrE,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CACI2B,WAAS,EACTC,UAAU,MACVN,QAAS,EACToC,WAAW,aACX/C,IAAK,SAAAS,GAAK,MAAK,CAAES,UAAWT,EAAME,aAElC1B,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,EAAC+B,GAAI,EAAGrB,IAAK,SAAAS,GAAK,MAAK,CAAES,UAAWT,EAAME,QAAQ,MACxD1B,OAAAC,EAAA,IAAAD,CAAC0D,EAAA,EAAD,CAAYlD,UAAU,QAAQtB,IAElCc,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,EAAC+B,IAAE,GACRiC,uLC1HV,IAAMC,EAAqB,WAG9B,OACItE,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,KACIF,OAAAC,EAAA,IAAAD,CAACG,EAAA,EAAD,CAAcV,MAAM,kHAChBO,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,GACNL,OAAAC,EAAA,IAAAD,CAACO,EAAA,aAAD,CACII,QAAQ,YACRlB,MAAM,yDACNmB,OAAO,QACPC,KAAMb,OAAAC,EAAA,IAAAD,CAACc,EAAA,UAAD,MACNC,IAAK,SAAAS,GAAK,MAAK,CAAEC,OAAM,KAAAG,OAAOJ,EAAME,QAAQ,QAEhD1B,OAAAC,EAAA,IAAAD,CAACO,EAAA,aAAD,CACII,QAAQ,WACRlB,MAAM,uCACNmB,OAAO,SACPC,KAAMb,OAAAC,EAAA,IAAAD,CAACc,EAAA,UAAD,MACNC,IAAK,SAAAS,GAAK,MAAK,CAAEC,OAAM,KAAAG,OAAOJ,EAAME,QAAQ,UAIxD1B,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CACIW,IAAK,SAAAS,GAAK,MAAK,CACX6B,SAAU7B,EAAM8B,iBAChB7B,OAAQD,EAAME,QAAQ,GACtB6B,SAAU,cAGdvD,OAAAC,EAAA,IAAAD,CAACO,EAAA,uBAAD,CACIQ,IAAK,SAAAS,GAAK,MAAK,CACXW,QAASX,EAAME,QAAQ,GACvB8B,OAAQ,OAEZC,SAAO,GAEPzD,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAM2B,WAAS,EAAChB,IAAK,SAAAS,GAAK,MAAK,CAAEW,QAAO,KAAAP,OAAOJ,EAAME,QAAQ,OACzD1B,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,EAAC+B,GAAI,IACXpC,OAAAC,EAAA,IAAAD,CAAC0D,EAAA,EAAD,CAAY3C,IAAK,SAAAS,GAAK,MAAK,CAAEmC,SAAUnC,EAAMmC,SAASC,SAAtD,kHAIJ5D,OAAAC,EAAA,IAAAD,CAACuE,EAAD,CAAoBrF,MAAM,+FACtBc,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAM2B,WAAS,EAACC,UAAW,MAAO8B,WAAY,WAAYpC,QAAS,GAC/D1B,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,EAAC+B,IAAE,GACTpC,OAAAC,EAAA,IAAAD,CAACO,EAAA,WAAD,CACI8B,YAAa,yIACbC,WAAS,MALzB,KAWAtC,OAAAC,EAAA,IAAAD,CAACuE,EAAD,CAAoBrF,MAAM,uEACtBc,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAM2B,WAAS,EAACC,UAAW,MAAO8B,WAAY,WAAYpC,QAAS,GAC/D1B,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,EAAC+B,IAAE,GACTpC,OAAAC,EAAA,IAAAD,CAACO,EAAA,WAAD,CAAY8B,YAAa,6HAA0BC,WAAS,KAEhEtC,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,GACNL,OAAAC,EAAA,IAAAD,CAACO,EAAA,UAAD,CAAW8B,YAAa,2FAE5BrC,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAM2B,WAAS,GACX/B,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,EAAC+B,IAAE,EAACrB,IAAK,SAAAS,GAAK,MAAK,CAAEgD,WAAYhD,EAAME,aAC7C1B,OAAAC,EAAA,IAAAD,CAACO,EAAA,aAAD,CACII,QAAQ,WACRlB,MAAM,4EACNmB,OAAO,cACPG,IAAKA,cAAF0D,KAGH5D,KAAMb,OAAAC,EAAA,IAAAD,CAACc,EAAA,QAAD,WAjB1B,KAwBAd,OAAAC,EAAA,IAAAD,CAACuE,EAAD,CAAoBrF,MAAM,wFACtBc,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAM2B,WAAS,EAACC,UAAW,MAAO8B,WAAY,WAAYpC,QAAS,GAC/D1B,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,EAAC+B,IAAE,GACTpC,OAAAC,EAAA,IAAAD,CAACO,EAAA,YAAD,CAAa8B,YAAa,uCAAUC,WAAS,KAEjDtC,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,EAAC+B,IAAE,GACTpC,OAAAC,EAAA,IAAAD,CAACO,EAAA,YAAD,CAAa8B,YAAa,uCAAUC,WAAS,KAEjDtC,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,EAAC+B,IAAE,GACTpC,OAAAC,EAAA,IAAAD,CAACO,EAAA,YAAD,CAAa8B,YAAa,uCAAUC,WAAS,KAEjDtC,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,EAAC+B,IAAE,GACTpC,OAAAC,EAAA,IAAAD,CAACO,EAAA,YAAD,CAAa8B,YAAa,iCAASC,WAAS,MAZxD,KAiBAtC,OAAAC,EAAA,IAAAD,CAACuE,EAAD,CAAoBrF,MAAM,sEACtBc,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,EAAC+B,GAAI,GACXpC,OAAAC,EAAA,IAAAD,CAACO,EAAA,YAAD,CAAa8B,YAAa,sHAAwBC,WAAS,KAFnE,OA9FN,CAAC,CAAE7C,MAAO,2DAsGLsE,IAAI,SAACC,EAAMC,GAAP,OACPjE,OAAAC,EAAA,IAAAD,CAACO,EAAA,uBAAD,CACIQ,IAAK,SAAAS,GAAK,MAAK,CAAEW,QAASX,EAAME,QAAQ,KACxCwC,IAAKD,GAELjE,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAM2B,WAAS,EAAChB,IAAK,SAAAS,GAAK,MAAK,CAAEW,QAAO,KAAAP,OAAOJ,EAAME,QAAQ,OACzD1B,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,EAAC+B,GAAI,IACXpC,OAAAC,EAAA,IAAAD,CAAC0D,EAAA,EAAD,CAAY3C,IAAK,SAAAS,GAAK,MAAK,CAAEmC,SAAUnC,EAAMmC,SAASC,SACjDI,EAAKvE,QAGdO,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,EAAC+B,GAAI,IACXpC,OAAAC,EAAA,IAAAD,CAACuE,EAAD,CAAoBrF,MAAM,wCACrB,IACDc,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,EAAC+B,GAAI,GACXpC,OAAAC,EAAA,IAAAD,CAACO,EAAA,YAAD,CAAa8B,YAAa,kFAAkBC,WAAS,KAH7D,aAoB1B6B,EAAgD,SAAAC,GAAyB,IAAtBlF,EAAsBkF,EAAtBlF,MAAOmF,EAAeD,EAAfC,SAC5D,OACIrE,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CACI2B,WAAS,EACTC,UAAW,MACXN,QAAS,EACToC,WAAY,aACZ/C,IAAK,SAAAS,GAAK,MAAK,CAAES,UAAWT,EAAME,aAElC1B,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,EAAC+B,GAAI,EAAGrB,IAAK,SAAAS,GAAK,MAAK,CAAES,UAAWT,EAAME,QAAQ,MACxD1B,OAAAC,EAAA,IAAAD,CAAC0D,EAAA,EAAD,CAAYlD,UAAW,QAAStB,IAEpCc,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,EAAC+B,IAAE,GACRiC,cCzJJK,EAAqB,WAC9B,IAAMC,EAAQ,CACV,CACIlF,MACIO,OAAAC,EAAA,IAAAD,CAAC0D,EAAA,EAAD,CAAY3C,IAAK,SAAAS,GAAK,MAAK,CAAEmC,SAAUnC,EAAMmC,SAASC,SAAtD,wKAIJgB,QACI5E,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAM2B,WAAS,EAACC,UAAW,UACvBhC,OAAAC,EAAA,IAAAD,CAAC0D,EAAA,EAAD,CAAY3C,IAAK,SAAAS,GAAK,MAAK,CAAEmC,SAAUnC,EAAMmC,SAASkB,UAAtD,0FAGA7E,OAAAC,EAAA,IAAAD,CAAC0D,EAAA,EAAD,CAAY3C,IAAK,SAAAS,GAAK,MAAK,CAAEmC,SAAUnC,EAAMmC,SAASmB,WAAtD,sGAKRC,WAAW,GAEf,CACItF,MACIO,OAAAC,EAAA,IAAAD,CAAC0D,EAAA,EAAD,CAAY3C,IAAK,SAAAS,GAAK,MAAK,CAAEmC,SAAUnC,EAAMmC,SAASC,SAAtD,wKAIJgB,QACI5E,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAM2B,WAAS,EAACC,UAAW,UACvBhC,OAAAC,EAAA,IAAAD,CAAC0D,EAAA,EAAD,CAAY3C,IAAK,SAAAS,GAAK,MAAK,CAAEmC,SAAUnC,EAAMmC,SAASkB,UAAtD,0FAGA7E,OAAAC,EAAA,IAAAD,CAAC0D,EAAA,EAAD,CAAY3C,IAAK,SAAAS,GAAK,MAAK,CAAEmC,SAAUnC,EAAMmC,SAASmB,WAAtD,wGAgBhB,OACI9E,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,KACIF,OAAAC,EAAA,IAAAD,CAACG,EAAA,EAAD,CAAcV,MAAM,kHAChBO,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,GACNL,OAAAC,EAAA,IAAAD,CAACO,EAAA,aAAD,CACII,QAAQ,YACRlB,MAAM,yDACNmB,OAAO,QACPC,KAAMb,OAAAC,EAAA,IAAAD,CAACc,EAAA,UAAD,MACNC,IAAK,SAAAS,GAAK,MAAK,CAAEC,OAAM,KAAAG,OAAOJ,EAAME,QAAQ,QAEhD1B,OAAAC,EAAA,IAAAD,CAACO,EAAA,aAAD,CACII,QAAQ,YACRlB,MAAM,yDACNmB,OAAO,SACPC,KAAMb,OAAAC,EAAA,IAAAD,CAACc,EAAA,UAAD,MACNC,IAAK,SAAAS,GAAK,MAAK,CAAEC,OAAM,KAAAG,OAAOJ,EAAME,QAAQ,QAEhD1B,OAAAC,EAAA,IAAAD,CAACO,EAAA,aAAD,CACII,QAAQ,YACRlB,MAAM,iFACNmB,OAAO,cACPC,KAAMb,OAAAC,EAAA,IAAAD,CAACc,EAAA,UAAD,MACNC,IAAK,SAAAS,GAAK,MAAK,CAAEC,OAAM,KAAAG,OAAOJ,EAAME,QAAQ,UAIxD1B,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CACIW,IAAK,SAAAS,GAAK,MAAK,CACX6B,SAAU7B,EAAM8B,iBAChB7B,OAAQD,EAAME,QAAQ,GACtB6B,SAAU,cAGdvD,OAAAC,EAAA,IAAAD,CAACO,EAAA,uBAAD,CACIQ,IAAK,SAAAS,GAAK,MAAK,CACXW,QAASX,EAAME,QAAQ,GACvB8B,OAAQ,OAEZC,SAAO,GAEPzD,OAAAC,EAAA,IAAAD,CAACgF,EAAD,CACIvF,MAAM,yNACNwF,OAAQnG,EAAYK,UAExBa,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAM2B,WAAS,EAACL,QAAS,GACrB1B,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,EAAC+B,IAAE,EAACrB,IAAK,SAAAS,GAAK,MAAK,CAAES,UAAWT,EAAME,QAAQ,MACpD1B,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAM2B,WAAS,EAACC,UAAW,OACvBhC,OAAAC,EAAA,IAAAD,CAACkF,EAAD,CAAUzF,MAAM,iFAAgBT,MAAM,eACtCgB,OAAAC,EAAA,IAAAD,CAACkF,EAAD,CACIzF,MAAM,qEACNT,MAAM,oKAGdgB,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CACI2B,WAAS,EACTC,UAAW,MACXjB,IAAK,SAAAS,GAAK,MAAK,CAAES,UAAWT,EAAME,QAAQ,MAE1C1B,OAAAC,EAAA,IAAAD,CAACkF,EAAD,CACIzF,MAAM,uFACNT,MAAM,8PAEVgB,OAAAC,EAAA,IAAAD,CAACkF,EAAD,CAAUzF,MAAM,kFAAiBT,MAAM,mBAG/CgB,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,EAAC+B,IAAE,GACTpC,OAAAC,EAAA,IAAAD,CAACO,EAAA,eAAD,CAAgBoE,MAAOA,OA3EjC,CACV,CAAElF,MAAO,0DACT,CAAEA,MAAO,yFACT,CAAEA,MAAO,4BACT,CAAEA,MAAO,6HACT,CAAEA,MAAO,mCA0EMsE,IAAI,SAAAC,GAAI,OACXhE,OAAAC,EAAA,IAAAD,CAACO,EAAA,uBAAD,CAAwBQ,IAAK,SAAAS,GAAK,MAAK,CAAEW,QAASX,EAAME,QAAQ,MAC5D1B,OAAAC,EAAA,IAAAD,CAACgF,EAAD,CAAMvF,MAAOuE,EAAKvE,cAapC0F,EAAqC,SAAAf,GAAsB,IAAnB3E,EAAmB2E,EAAnB3E,MAAOT,EAAYoF,EAAZpF,MACjD,OACIgB,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,EAAC+B,IAAE,GACTpC,OAAAC,EAAA,IAAAD,CAAC0D,EAAA,EAAD,CACI3C,IAAK,SAAAS,GAAK,MAAK,CACX4D,MAAO5D,EAAMK,OAAOwD,UACpB1B,SAAUnC,EAAMmC,SAASmB,QACzBQ,cAAe,eAGlB7F,GAELO,OAAAC,EAAA,IAAAD,CAAC0D,EAAA,EAAD,CACI3C,IAAK,SAAAS,GAAK,MAAK,CACXmC,SAAUnC,EAAMmC,SAASkB,OACzBO,MAAO5D,EAAMK,OAAO0D,SAGvBvG,KAWXwG,EAA6B,SAAAC,GAAuB,IAApBhG,EAAoBgG,EAApBhG,MAAOwF,EAAaQ,EAAbR,OAUzC,SAASS,EAAiBlE,EAAYyD,GAA6B,IAAAU,EAC/D,OAAOA,EAAA,GAAA3F,OAAA4F,EAAA,EAAA5F,CAAA2F,EACF7G,EAAYG,YAAcuC,EAAMK,OAAOgE,QADrC7F,OAAA4F,EAAA,EAAA5F,CAAA2F,EAEF7G,EAAYK,QAAUqC,EAAMK,OAAOiE,YAFjC9F,OAAA4F,EAAA,EAAA5F,CAAA2F,EAGF7G,EAAYO,KAAOmC,EAAMK,OAAOkE,OAH9B/F,OAAA4F,EAAA,EAAA5F,CAAA2F,EAIF7G,EAAYM,MAAQoC,EAAMK,OAAOwD,WAJ/BM,GAKLV,GAGN,OACIjF,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAM2B,WAAS,EAACL,QAAS,EAAGwC,IAAKzE,GAC7BO,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CACIC,MAAI,EACJ+B,GAAI,GACJrB,IAAK,SAAAS,GAAK,MAAK,CACXwE,YAAaxE,EAAME,QAAQ,GAC3BuE,aAAczE,EAAME,QAAQ,MAGhC1B,OAAAC,EAAA,IAAAD,CAAC0D,EAAA,EAAD,CAAY3C,IAAK,SAAAS,GAAK,MAAK,CAAEmC,SAAUnC,EAAMmC,SAASC,SAAWnE,MAElEwF,GACCjF,OAAAC,EAAA,IAAAD,CAACI,EAAA,EAAD,CAAMC,MAAI,GACNL,OAAAC,EAAA,IAAAD,CAAA,QACIe,IAAK,SAAAS,GAAK,MAAK,CACX0E,MAAO1E,EAAME,UACbyE,OAAQ3E,EAAME,UACda,aAAc,MACd6D,QAAS,eACT3D,WAAYiD,EAAiBlE,EAAOyD,GACpCxD,OAAQ,qBAGhBzB,OAAAC,EAAA,IAAAD,CAAA,QACIe,IAAK,SAAAS,GAAK,MAAK,CAAE4D,MAAOM,EAAiBlE,EAAOyD,MAE/CA,GA7CrB,SAA0BA,GAA6B,IAAAoB,EACnD,OAAOA,EAAA,GAAArG,OAAA4F,EAAA,EAAA5F,CAAAqG,EACFvH,EAAYG,YAAc,+CADxBe,OAAA4F,EAAA,EAAA5F,CAAAqG,EAEFvH,EAAYK,QAAU,iEAFpBa,OAAA4F,EAAA,EAAA5F,CAAAqG,EAGFvH,EAAYO,KAAO,0DAHjBW,OAAA4F,EAAA,EAAA5F,CAAAqG,EAIFvH,EAAYM,MAAQ,oDAJlBiH,GAKLpB,GAuCyBqB,CAAiBrB,OC3NpDsB,EAAAC,EAAAC,EAAA,8BAAAC,IAAAH,EAAAC,EAAAC,EAAA,+BAAAE,IAAAJ,EAAAC,EAAAC,EAAA,6BAAAG,IAAAL,EAAAC,EAAAC,EAAA,6BAAAI","file":"static/js/1.2aba2176.chunk.js","sourcesContent":["export enum ETaskStatus {\n    IN_PROGRESS = \"in-progress\",\n    CHECKED = \"checked\",\n    DRAFT = \"draft\",\n    DONE = \"done\",\n}\n","/** @jsx jsx */\n\nimport { css, jsx } from \"@emotion/core\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { Link, RouteComponentProps } from \"@reach/router\";\nimport { SectionLayout } from \"components/section-layout\";\nimport { SectionTitle } from \"components/section-title\";\nimport {\n    CustomButton,\n    IColumn,\n    InputField,\n    ITab,\n    SelectField,\n    TableWrapper,\n    TabsWrapper,\n} from \"@magnit/components\";\nimport { AddIcon } from \"@magnit/icons\";\nimport { ETaskStatus } from \"../../entities\";\nimport { EmptyList } from \"components/list\";\n\nconst tabs: ITab[] = [\n    { value: ETaskStatus.IN_PROGRESS, label: \"В работе\" },\n    { value: ETaskStatus.CHECKED, label: \"На проверке\" },\n    { value: ETaskStatus.DRAFT, label: \"Черновики\" },\n    { value: ETaskStatus.DONE, label: \"Завершенные\" },\n];\n\nconst columns: IColumn[] = [\n    { id: \"title\", label: \"Название задания\" },\n    { id: \"region\", label: \"Регион\" },\n    { id: \"office_part\", label: \"Филиал\" },\n    { id: \"address\", label: \"Адрес объекта\" },\n    { id: \"step\", label: \"Этап\" },\n    { id: \"date\", label: \"Срок выполнения\" },\n];\n\nconst rows: object[] = [\n    {\n        title: \"Задание 1\",\n        region: \"Марий Эл\",\n        address: \"г. Йошкар-Ола, Воскресенский Проспект 17\",\n        step: 1,\n    },\n    {\n        title: \"Задание 2\",\n        region: \"Марий Эл\",\n        address: \"г. Йошкар-Ола, Воскресенский Проспект 17\",\n        step: 2,\n    },\n    {\n        title: \"Задание 3\",\n        region: \"Марий Эл\",\n        address: \"г. Йошкар-Ола, Воскресенский Проспект 17\",\n        step: 3,\n    },\n];\n\nexport const TasksList: React.FC<RouteComponentProps> = () => {\n    const empty = !rows.length;\n\n    return (\n        <SectionLayout>\n            <SectionTitle title=\"Список заданий\">\n                <Grid item hidden={empty}>\n                    <CustomButton\n                        component={Link}\n                        to=\"create\"\n                        variant=\"contained\"\n                        title=\"Создать задание\"\n                        scheme=\"blue\"\n                        icon={<AddIcon />}\n                        css={css`\n                            width: 180px;\n                        `}\n                    />\n                </Grid>\n            </SectionTitle>\n            {empty && (\n                <EmptyList\n                    title=\"Заданий нет\"\n                    actionName=\"Создать задание\"\n                    button={\n                        <CustomButton\n                            component={Link}\n                            to=\"create\"\n                            icon={<AddIcon />}\n                            title=\"Создать задание\"\n                            css={css`\n                                width: 180px;\n                            `}\n                        />\n                    }\n                    description=\"Для создания задания нажмите кнопку\"\n                />\n            )}\n            {!empty && (\n                <Paper\n                    square={true}\n                    css={theme => ({\n                        margin: theme.spacing(3),\n                        boxShadow: `0px 0px ${theme.spacing(2)} ${\n                            theme.colors.lightGray\n                        } !important`,\n                    })}\n                >\n                    <Grid\n                        container\n                        direction=\"row\"\n                        css={theme => ({ marginTop: theme.spacing(2) })}\n                    >\n                        <TabsWrapper tabs={tabs} baseUrl=\"tasks\">\n                            <Grid\n                                container\n                                direction=\"column\"\n                                css={theme => ({ padding: theme.spacing(3) })}\n                            >\n                                <Grid container direction=\"row\" spacing={2}>\n                                    <Grid item xs>\n                                        <InputField\n                                            placeholder=\"Поиск ...\"\n                                            fullWidth\n                                            css={theme => ({\n                                                borderRadius: theme.radius(5),\n                                                background: theme.colors.white,\n                                                border: `1px solid ${theme.colors.lightGray}`,\n                                                transition: \"border 0.25s ease-in-out\",\n                                                cursor: \"pointer\",\n                                                \":hover, :active\": {\n                                                    border: `1px solid ${theme.colors.primary}`,\n                                                },\n                                                div: {\n                                                    \":before, :after\": {\n                                                        border: \"none !important\",\n                                                    },\n                                                },\n                                                input: {\n                                                    padding: `${theme.spacing(2)} ${theme.spacing(\n                                                        4\n                                                    )}`,\n                                                },\n                                            })}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={2}>\n                                        <SelectField placeholder=\"Выберите регион\" fullWidth />\n                                    </Grid>\n                                    <Grid item xs={2}>\n                                        <SelectField placeholder=\"Выберите филиал\" fullWidth />\n                                    </Grid>\n                                </Grid>\n                                <Grid item css={theme => ({ padding: theme.spacing(3) })}>\n                                    <TableWrapper columns={columns} data={rows} />\n                                </Grid>\n                            </Grid>\n                        </TabsWrapper>\n                    </Grid>\n                </Paper>\n            )}\n        </SectionLayout>\n    );\n};\n","/** @jsx jsx */\n\nimport * as React from \"react\";\nimport { SectionLayout } from \"components/section-layout\";\nimport { SectionTitle } from \"components/section-title\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { jsx } from \"@emotion/core\";\nimport {\n    CustomButton,\n    DateField,\n    InputField,\n    SelectableBlockWrapper,\n    SelectField,\n} from \"@magnit/components\";\nimport { CheckIcon } from \"@magnit/icons\";\n\nexport const CreateTask: React.FC = () => {\n    const parts = [{ title: \"Документы\" }];\n\n    return (\n        <SectionLayout>\n            <SectionTitle title=\"Создание задания\">\n                <Grid item>\n                    <CustomButton\n                        variant=\"contained\"\n                        title=\"Сохранить\"\n                        scheme=\"green\"\n                        icon={<CheckIcon />}\n                        css={theme => ({ margin: `0 ${theme.spacing(1)}` })}\n                    />\n                    <CustomButton\n                        variant=\"contained\"\n                        title=\"Отправить\"\n                        scheme=\"violet\"\n                        icon={<CheckIcon />}\n                        css={theme => ({ margin: `0 ${theme.spacing(1)}` })}\n                    />\n                </Grid>\n            </SectionTitle>\n            <Grid\n                css={theme => ({\n                    maxWidth: theme.maxTemplateWidth,\n                    margin: theme.spacing(4),\n                    position: \"relative\",\n                })}\n            >\n                <SelectableBlockWrapper\n                    css={theme => ({\n                        padding: theme.spacing(3),\n                        zIndex: 1300,\n                    })}\n                    focused\n                >\n                    <Grid container css={theme => ({ padding: `0 ${theme.spacing(4)}` })}>\n                        <Grid item xs={12}>\n                            <Typography css={theme => ({ fontSize: theme.fontSize.large })}>\n                                Основная информация\n                            </Typography>\n                        </Grid>\n                        <TaskFieldContainer label=\"Название задания\">\n                            <InputField placeholder=\"Введите название задания\" fullWidth />\n                        </TaskFieldContainer>\n                        <TaskFieldContainer label=\"Этап задания\">\n                            <Grid container direction=\"row\" alignItems=\"flex-end\" spacing={2}>\n                                <Grid item xs>\n                                    <InputField placeholder=\"Введите название этапа\" fullWidth />\n                                </Grid>\n                                <Grid item>\n                                    <DateField placeholder=\"Срок выполнения\" />\n                                </Grid>\n                            </Grid>\n                        </TaskFieldContainer>\n                        <TaskFieldContainer label=\"Местоположение\">\n                            <Grid container direction=\"row\" alignItems=\"flex-end\" spacing={2}>\n                                <Grid item xs>\n                                    <SelectField placeholder=\"Регион\" fullWidth />\n                                </Grid>\n                                <Grid item xs>\n                                    <SelectField placeholder=\"Филиал\" fullWidth />\n                                </Grid>\n                                <Grid item xs>\n                                    <SelectField placeholder=\"Формат\" fullWidth />\n                                </Grid>\n                                <Grid item xs>\n                                    <SelectField placeholder=\"Адрес\" fullWidth />\n                                </Grid>\n                            </Grid>\n                        </TaskFieldContainer>\n                        <TaskFieldContainer label=\"Исполнитель\">\n                            <Grid item xs={4}>\n                                <SelectField placeholder=\"Выберите исполнителя\" fullWidth />\n                            </Grid>\n                        </TaskFieldContainer>\n                    </Grid>\n                </SelectableBlockWrapper>\n                {parts.map((part, index) => (\n                    <SelectableBlockWrapper\n                        css={theme => ({ padding: theme.spacing(3) })}\n                        key={index}\n                    >\n                        <Grid container css={theme => ({ padding: `0 ${theme.spacing(4)}` })}>\n                            <Grid item xs={12}>\n                                <Typography css={theme => ({ fontSize: theme.fontSize.large })}>\n                                    {part.title}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TaskFieldContainer label=\"Шаблон\">\n                                    <Grid item xs={3}>\n                                        <SelectField placeholder=\"Выбрать шаблон\" fullWidth />\n                                    </Grid>\n                                </TaskFieldContainer>\n                            </Grid>\n                        </Grid>\n                    </SelectableBlockWrapper>\n                ))}\n            </Grid>\n        </SectionLayout>\n    );\n};\n\ninterface ITaskFieldProps {\n    label: string;\n}\n\nconst TaskFieldContainer: React.FC<ITaskFieldProps> = ({ label, children }) => {\n    return (\n        <Grid\n            container\n            direction=\"row\"\n            spacing={2}\n            alignItems=\"flex-start\"\n            css={theme => ({ marginTop: theme.spacing() })}\n        >\n            <Grid item xs={2} css={theme => ({ marginTop: theme.spacing(2) })}>\n                <Typography component=\"span\">{label}</Typography>\n            </Grid>\n            <Grid item xs>\n                {children}\n            </Grid>\n        </Grid>\n    );\n};\n","/** @jsx jsx */\n\nimport * as React from \"react\";\nimport { SectionLayout } from \"components/section-layout\";\nimport { SectionTitle } from \"components/section-title\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { jsx, css } from \"@emotion/core\";\nimport {\n    CustomButton,\n    DateField,\n    InputField,\n    SelectableBlockWrapper,\n    SelectField,\n} from \"@magnit/components\";\nimport { AddIcon, CheckIcon } from \"@magnit/icons\";\n\nexport const EditTask: React.FC = () => {\n    const parts = [{ title: \"Документы\" }];\n\n    return (\n        <SectionLayout>\n            <SectionTitle title=\"Информация о задании\">\n                <Grid item>\n                    <CustomButton\n                        variant=\"contained\"\n                        title=\"Сохранить\"\n                        scheme=\"green\"\n                        icon={<CheckIcon />}\n                        css={theme => ({ margin: `0 ${theme.spacing(1)}` })}\n                    />\n                    <CustomButton\n                        variant=\"outlined\"\n                        title=\"Отмена\"\n                        scheme=\"violet\"\n                        icon={<CheckIcon />}\n                        css={theme => ({ margin: `0 ${theme.spacing(1)}` })}\n                    />\n                </Grid>\n            </SectionTitle>\n            <Grid\n                css={theme => ({\n                    maxWidth: theme.maxTemplateWidth,\n                    margin: theme.spacing(4),\n                    position: \"relative\",\n                })}\n            >\n                <SelectableBlockWrapper\n                    css={theme => ({\n                        padding: theme.spacing(3),\n                        zIndex: 1300,\n                    })}\n                    focused\n                >\n                    <Grid container css={theme => ({ padding: `0 ${theme.spacing(4)}` })}>\n                        <Grid item xs={12}>\n                            <Typography css={theme => ({ fontSize: theme.fontSize.large })}>\n                                Основная информация\n                            </Typography>\n                        </Grid>\n                        <TaskFieldContainer label=\"Название задания\">\n                            <Grid container direction={\"row\"} alignItems={\"flex-end\"} spacing={2}>\n                                <Grid item xs>\n                                    <InputField\n                                        placeholder={\"Введите название задания\"}\n                                        fullWidth\n                                    />\n                                </Grid>\n                            </Grid>\n                            ,\n                        </TaskFieldContainer>\n                        <TaskFieldContainer label=\"Этап задания\">\n                            <Grid container direction={\"row\"} alignItems={\"flex-end\"} spacing={2}>\n                                <Grid item xs>\n                                    <InputField placeholder={\"Введите название этапа\"} fullWidth />\n                                </Grid>\n                                <Grid item>\n                                    <DateField placeholder={\"Срок выполнения\"} />\n                                </Grid>\n                                <Grid container>\n                                    <Grid item xs css={theme => ({ marginLeft: theme.spacing() })}>\n                                        <CustomButton\n                                            variant=\"outlined\"\n                                            title=\"Добавить этап\"\n                                            scheme=\"blueOutline\"\n                                            css={css`\n                                                width: 180px;\n                                            `}\n                                            icon={<AddIcon />}\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            ,\n                        </TaskFieldContainer>\n                        <TaskFieldContainer label=\"Местоположение\">\n                            <Grid container direction={\"row\"} alignItems={\"flex-end\"} spacing={2}>\n                                <Grid item xs>\n                                    <SelectField placeholder={\"Регион\"} fullWidth />\n                                </Grid>\n                                <Grid item xs>\n                                    <SelectField placeholder={\"Филиал\"} fullWidth />\n                                </Grid>\n                                <Grid item xs>\n                                    <SelectField placeholder={\"Формат\"} fullWidth />\n                                </Grid>\n                                <Grid item xs>\n                                    <SelectField placeholder={\"Адрес\"} fullWidth />\n                                </Grid>\n                            </Grid>\n                            ,\n                        </TaskFieldContainer>\n                        <TaskFieldContainer label=\"Исполнитель\">\n                            <Grid item xs={4}>\n                                <SelectField placeholder={\"Выберите исполнителя\"} fullWidth />\n                            </Grid>\n                            ,\n                        </TaskFieldContainer>\n                    </Grid>\n                </SelectableBlockWrapper>\n                {parts.map((part, index) => (\n                    <SelectableBlockWrapper\n                        css={theme => ({ padding: theme.spacing(3) })}\n                        key={index}\n                    >\n                        <Grid container css={theme => ({ padding: `0 ${theme.spacing(4)}` })}>\n                            <Grid item xs={12}>\n                                <Typography css={theme => ({ fontSize: theme.fontSize.large })}>\n                                    {part.title}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TaskFieldContainer label=\"Шаблон\">\n                                    {\" \"}\n                                    <Grid item xs={3}>\n                                        <SelectField placeholder={\"Выбрать шаблон\"} fullWidth />\n                                    </Grid>\n                                    ,\n                                </TaskFieldContainer>\n                            </Grid>\n                        </Grid>\n                    </SelectableBlockWrapper>\n                ))}\n            </Grid>\n        </SectionLayout>\n    );\n};\n\ninterface ITaskFieldProps {\n    label: string;\n}\n\nconst TaskFieldContainer: React.FC<ITaskFieldProps> = ({ label, children }) => {\n    return (\n        <Grid\n            container\n            direction={\"row\"}\n            spacing={2}\n            alignItems={\"flex-start\"}\n            css={theme => ({ marginTop: theme.spacing() })}\n        >\n            <Grid item xs={2} css={theme => ({ marginTop: theme.spacing(2) })}>\n                <Typography component={\"span\"}>{label}</Typography>\n            </Grid>\n            <Grid item xs>\n                {children}\n            </Grid>\n        </Grid>\n    );\n};\n","/** @jsx jsx */\n\nimport * as React from \"react\";\nimport { jsx } from \"@emotion/core\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { SectionTitle } from \"components/section-title\";\nimport { SectionLayout } from \"components/section-layout\";\nimport { CustomButton, SelectableBlockWrapper, StepperWrapper } from \"@magnit/components\";\nimport { CheckIcon } from \"@magnit/icons\";\nimport { ETaskStatus } from \"../../entities\";\n\nexport const ViewTask: React.FC = () => {\n    const steps = [\n        {\n            title: (\n                <Typography css={theme => ({ fontSize: theme.fontSize.large })}>\n                    Подготовка технического плана\n                </Typography>\n            ),\n            content: (\n                <Grid container direction={\"column\"}>\n                    <Typography css={theme => ({ fontSize: theme.fontSize.normal })}>\n                        до 07.07.2019 (просрочено)\n                    </Typography>\n                    <Typography css={theme => ({ fontSize: theme.fontSize.smaller })}>\n                        История изменений\n                    </Typography>\n                </Grid>\n            ),\n            completed: true,\n        },\n        {\n            title: (\n                <Typography css={theme => ({ fontSize: theme.fontSize.large })}>\n                    Подготовка технического плана\n                </Typography>\n            ),\n            content: (\n                <Grid container direction={\"column\"}>\n                    <Typography css={theme => ({ fontSize: theme.fontSize.normal })}>\n                        до 07.07.2019 (просрочено)\n                    </Typography>\n                    <Typography css={theme => ({ fontSize: theme.fontSize.smaller })}>\n                        История изменений\n                    </Typography>\n                </Grid>\n            ),\n        },\n    ];\n\n    const parts = [\n        { title: \"Документы\" },\n        { title: \"Ведомость работ\" },\n        { title: \"Бриф\" },\n        { title: \"Инженерное заключение\" },\n        { title: \"Смета\" },\n    ];\n\n    return (\n        <SectionLayout>\n            <SectionTitle title=\"Информация о задании\">\n                <Grid item>\n                    <CustomButton\n                        variant=\"contained\"\n                        title=\"Завершить\"\n                        scheme=\"green\"\n                        icon={<CheckIcon />}\n                        css={theme => ({ margin: `0 ${theme.spacing(1)}` })}\n                    />\n                    <CustomButton\n                        variant=\"contained\"\n                        title=\"Отправить\"\n                        scheme=\"violet\"\n                        icon={<CheckIcon />}\n                        css={theme => ({ margin: `0 ${theme.spacing(1)}` })}\n                    />\n                    <CustomButton\n                        variant=\"contained\"\n                        title=\"Редактировать\"\n                        scheme=\"blueOutline\"\n                        icon={<CheckIcon />}\n                        css={theme => ({ margin: `0 ${theme.spacing(1)}` })}\n                    />\n                </Grid>\n            </SectionTitle>\n            <Grid\n                css={theme => ({\n                    maxWidth: theme.maxTemplateWidth,\n                    margin: theme.spacing(4),\n                    position: \"relative\",\n                })}\n            >\n                <SelectableBlockWrapper\n                    css={theme => ({\n                        padding: theme.spacing(3),\n                        zIndex: 1300,\n                    })}\n                    focused\n                >\n                    <Head\n                        title=\"Хардкорное задание для суровых прорабов\"\n                        status={ETaskStatus.CHECKED}\n                    />\n                    <Grid container spacing={2}>\n                        <Grid item xs css={theme => ({ marginTop: theme.spacing(4) })}>\n                            <Grid container direction={\"row\"}>\n                                <MainInfo title=\"Администратор\" value=\"Andrey_555\" />\n                                <MainInfo\n                                    title=\"Исполнитель\"\n                                    value=\"Рукастый Иннокентий Петрович\"\n                                />\n                            </Grid>\n                            <Grid\n                                container\n                                direction={\"row\"}\n                                css={theme => ({ marginTop: theme.spacing(3) })}\n                            >\n                                <MainInfo\n                                    title=\"Местоположение\"\n                                    value=\"Челябинская область, Челябинск, улица Железная, 5\"\n                                />\n                                <MainInfo title=\"Формат объекта\" value=\"МК\" />\n                            </Grid>\n                        </Grid>\n                        <Grid item xs>\n                            <StepperWrapper steps={steps} />\n                        </Grid>\n                    </Grid>\n                </SelectableBlockWrapper>\n                {parts.map(part => (\n                    <SelectableBlockWrapper css={theme => ({ padding: theme.spacing(3) })}>\n                        <Head title={part.title} />\n                    </SelectableBlockWrapper>\n                ))}\n            </Grid>\n        </SectionLayout>\n    );\n};\n\ninterface IMainInfoProps {\n    title: string;\n    value: string;\n}\n\nconst MainInfo: React.FC<IMainInfoProps> = ({ title, value }) => {\n    return (\n        <Grid item xs>\n            <Typography\n                css={theme => ({\n                    color: theme.colors.secondary,\n                    fontSize: theme.fontSize.smaller,\n                    textTransform: \"uppercase\",\n                })}\n            >\n                {title}\n            </Typography>\n            <Typography\n                css={theme => ({\n                    fontSize: theme.fontSize.normal,\n                    color: theme.colors.black,\n                })}\n            >\n                {value}\n            </Typography>\n        </Grid>\n    );\n};\n\ninterface IHeadProps {\n    title: string;\n    status?: string;\n}\n\nconst Head: React.FC<IHeadProps> = ({ title, status }) => {\n    function getTitleByStatus(status: ETaskStatus): string {\n        return {\n            [ETaskStatus.IN_PROGRESS]: \"В работе\",\n            [ETaskStatus.CHECKED]: \"На проверке\",\n            [ETaskStatus.DONE]: \"Завершено\",\n            [ETaskStatus.DRAFT]: \"Черновик\",\n        }[status];\n    }\n\n    function getColorByStatus(theme: any, status: ETaskStatus): string {\n        return {\n            [ETaskStatus.IN_PROGRESS]: theme.colors.violet,\n            [ETaskStatus.CHECKED]: theme.colors.darkYellow,\n            [ETaskStatus.DONE]: theme.colors.green,\n            [ETaskStatus.DRAFT]: theme.colors.secondary,\n        }[status];\n    }\n\n    return (\n        <Grid container spacing={2} key={title}>\n            <Grid\n                item\n                xs={12}\n                css={theme => ({\n                    paddingLeft: theme.spacing(4),\n                    paddingRight: theme.spacing(4),\n                })}\n            >\n                <Typography css={theme => ({ fontSize: theme.fontSize.large })}>{title}</Typography>\n            </Grid>\n            {!!status && (\n                <Grid item>\n                    <span\n                        css={theme => ({\n                            width: theme.spacing(),\n                            height: theme.spacing(),\n                            borderRadius: \"50%\",\n                            display: \"inline-block\",\n                            background: getColorByStatus(theme, status as ETaskStatus),\n                            margin: \"2px 10px 2px 0\",\n                        })}\n                    />\n                    <span\n                        css={theme => ({ color: getColorByStatus(theme, status as ETaskStatus) })}\n                    >\n                        {status && getTitleByStatus(status as ETaskStatus)}\n                    </span>\n                </Grid>\n            )}\n        </Grid>\n    );\n};\n","export * from \"./TasksList\";\nexport * from \"./CreateTask\";\nexport * from \"./EditTask\";\nexport * from \"./ViewTask\";\n"],"sourceRoot":""}