{"version":3,"sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/centered-section-item/CenteredSectionItem.tsx","components/list/EmptyList.tsx","components/list/index.ts","entities/ETaskStatus.ts","entities/index.ts","containers/tasks/Tasks.tsx","containers/tasks/index.ts"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","__webpack_require__","d","__webpack_exports__","CenteredSectionItem","_ref","children","core_browser_esm","Grid","item","xs","css","_templateObject","EmptyList","title","button","description","props","objectWithoutProperties","CenteredSectionItem_CenteredSectionItem","container","justify","alignContent","direction","theme","marginBottom","spacing","Typography","component","align","color","colors","black","fontWeight","fontSize","xLarge","secondary","larger","actionName","EmptyList_EmptyList","ETaskStatus","tabs","value","IN_PROGRESS","label","CHECKED","DRAFT","DONE","columns","id","rows","region","address","step","Tasks","hasTableItems","section_layout","section_title","hidden","dist","Link","to","variant","scheme","icon","icons_dist","list","_templateObject2","Paper","square","margin","boxShadow","concat","lightGray","marginTop","baseUrl","padding","placeholder","fullWidth","borderRadius","radius","background","white","border","transition","cursor",":hover, :active","primary","div",":before, :after","input","data","Tasks_Tasks"],"mappings":"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","file":"static/js/6.16912bbc.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","/** @jsx jsx */\n\nimport { css, jsx } from \"@emotion/core\";\nimport * as React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nexport const CenteredSectionItem: React.FC = ({ children }) => {\n    return (\n        <Grid\n            item\n            xs\n            css={css`\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                align-items: center;\n            `}\n        >\n            {children}\n        </Grid>\n    );\n};\n","/** @jsx jsx */\n\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { jsx } from \"@emotion/core\";\nimport { CenteredSectionItem } from \"components/centered-section-item\";\nimport * as React from \"react\";\n\ninterface IEmptyListProps {\n    title: string;\n    button: React.ReactNode;\n    actionName: string;\n    description?: string;\n}\n\nexport const EmptyList: React.FC<IEmptyListProps> = ({ title, button, description, ...props }) => {\n    return (\n        <CenteredSectionItem>\n            <Grid container justify=\"center\" alignContent=\"center\" direction=\"column\">\n                <Grid item css={theme => ({ marginBottom: theme.spacing(3) })}>\n                    <Typography\n                        component=\"div\"\n                        align=\"center\"\n                        css={theme => ({\n                            color: theme.colors.black,\n                            fontWeight: 500,\n                            fontSize: theme.fontSize.xLarge,\n                        })}\n                    >\n                        <span>{title}</span>\n                    </Typography>\n                </Grid>\n                <Grid item css={theme => ({ marginBottom: theme.spacing(3) })}>\n                    <Typography\n                        component=\"div\"\n                        align=\"center\"\n                        css={theme => ({\n                            color: theme.colors.secondary,\n                            fontSize: theme.colors.larger,\n                        })}\n                    >\n                        <div>{description || \"Для создания нажмите кнопку\"}</div>\n                        <div>{props.actionName}</div>\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <Grid container justify=\"center\" alignContent=\"center\">\n                        <Grid item>{button}</Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </CenteredSectionItem>\n    );\n};\n","export * from \"./EmptyList\";\n","export enum ETaskStatus {\n    IN_PROGRESS = \"in-progress\",\n    CHECKED = \"checked\",\n    DRAFT = \"draft\",\n    DONE = \"done\",\n}\n","export * from \"./ETaskStatus\";\n","/** @jsx jsx */\n\nimport { css, jsx } from \"@emotion/core\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { Link, RouteComponentProps } from \"@reach/router\";\nimport { SectionLayout } from \"components/section-layout\";\nimport { SectionTitle } from \"components/section-title\";\nimport {\n    CustomButton,\n    IColumn,\n    InputField,\n    ITab,\n    SelectField,\n    TableWrapper,\n    TabsWrapper,\n} from \"@magnit/components\";\nimport { AddIcon } from \"@magnit/icons\";\nimport { ETaskStatus } from \"../../entities\";\nimport { EmptyList } from \"components/list\";\n\nconst tabs: ITab[] = [\n    { value: ETaskStatus.IN_PROGRESS, label: \"В работе\" },\n    { value: ETaskStatus.CHECKED, label: \"На проверке\" },\n    { value: ETaskStatus.DRAFT, label: \"Черновики\" },\n    { value: ETaskStatus.DONE, label: \"Завершенные\" },\n];\n\nconst columns: IColumn[] = [\n    { id: \"title\", label: \"Название задания\" },\n    { id: \"region\", label: \"Регион\" },\n    { id: \"office_part\", label: \"Филиал\" },\n    { id: \"address\", label: \"Адрес объекта\" },\n    { id: \"step\", label: \"Этап\" },\n    { id: \"date\", label: \"Срок выполнения\" },\n];\n\nconst rows: object[] = [\n    {\n        title: \"Задание 1\",\n        region: \"Марий Эл\",\n        address: \"г. Йошкар-Ола, Воскресенский Проспект 17\",\n        step: 1,\n    },\n    {\n        title: \"Задание 2\",\n        region: \"Марий Эл\",\n        address: \"г. Йошкар-Ола, Воскресенский Проспект 17\",\n        step: 2,\n    },\n    {\n        title: \"Задание 3\",\n        region: \"Марий Эл\",\n        address: \"г. Йошкар-Ола, Воскресенский Проспект 17\",\n        step: 3,\n    },\n];\n\nexport const Tasks: React.FC<RouteComponentProps> = () => {\n    const hasTableItems = !!rows.length;\n    return (\n        <SectionLayout>\n            <SectionTitle title=\"Список заданий\">\n                <Grid item hidden={!hasTableItems}>\n                    <CustomButton\n                        component={Link}\n                        to=\"create\"\n                        variant=\"contained\"\n                        title=\"Создать задание\"\n                        scheme=\"blue\"\n                        icon={<AddIcon />}\n                        css={css`\n                            width: 180px;\n                        `}\n                    />\n                </Grid>\n            </SectionTitle>\n            {!hasTableItems && (\n                <EmptyList\n                    title=\"Заданий нет\"\n                    actionName=\"Создать задание\"\n                    button={\n                        <CustomButton\n                            component={Link}\n                            to=\"create\"\n                            icon={<AddIcon />}\n                            title=\"Создать задание\"\n                            css={css`\n                                width: 180px;\n                            `}\n                        />\n                    }\n                    description=\"Для создания задания нажмите кнопку\"\n                />\n            )}\n            {hasTableItems && (\n                <Paper\n                    square={true}\n                    css={theme => ({\n                        margin: theme.spacing(3),\n                        boxShadow: `0px 0px ${theme.spacing(2)} ${\n                            theme.colors.lightGray\n                        } !important`,\n                    })}\n                >\n                    <Grid\n                        container\n                        direction=\"row\"\n                        css={theme => ({ marginTop: theme.spacing(2) })}\n                    >\n                        <TabsWrapper tabs={tabs} baseUrl=\"tasks\">\n                            <Grid\n                                container\n                                direction=\"column\"\n                                css={theme => ({ padding: theme.spacing(3) })}\n                            >\n                                <Grid container direction=\"row\" spacing={2}>\n                                    <Grid item xs>\n                                        <InputField\n                                            placeholder=\"Поиск ...\"\n                                            fullWidth\n                                            css={theme => ({\n                                                borderRadius: theme.radius(5),\n                                                background: theme.colors.white,\n                                                border: `1px solid ${theme.colors.lightGray}`,\n                                                transition: \"border 0.25s ease-in-out\",\n                                                cursor: \"pointer\",\n                                                \":hover, :active\": {\n                                                    border: `1px solid ${theme.colors.primary}`,\n                                                },\n                                                div: {\n                                                    \":before, :after\": {\n                                                        border: \"none !important\",\n                                                    },\n                                                },\n                                                input: {\n                                                    padding: `${theme.spacing(2)} ${theme.spacing(\n                                                        4\n                                                    )}`,\n                                                },\n                                            })}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={2}>\n                                        <SelectField placeholder=\"Выберите регион\" fullWidth />\n                                    </Grid>\n                                    <Grid item xs={2}>\n                                        <SelectField placeholder=\"Выберите филиал\" fullWidth />\n                                    </Grid>\n                                </Grid>\n                                <Grid item css={theme => ({ padding: theme.spacing(3) })}>\n                                    <TableWrapper columns={columns} data={rows} />\n                                </Grid>\n                            </Grid>\n                        </TabsWrapper>\n                    </Grid>\n                </Paper>\n            )}\n        </SectionLayout>\n    );\n};\n","export * from \"./Tasks\";\n"],"sourceRoot":""}