{"version":3,"sources":["components/section-title/SectionTitle.tsx","components/section-title/index.ts","components/section-layout/SectionLayout.tsx","components/section-layout/index.ts","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/centered-section-item/CenteredSectionItem.tsx","components/list/EmptyList.tsx","components/list/index.ts","entities/ETaskStatus.ts","entities/index.ts","containers/tasks/Tasks.tsx","containers/tasks/index.ts"],"names":["SectionTitle","_ref","title","children","Object","core_browser_esm","Grid","item","css","_templateObject","Paper","square","_templateObject2","container","theme","paddingLeft","spacing","paddingRight","xs","Typography","variant","component","__webpack_require__","d","__webpack_exports__","SectionTitle_SectionTitle","SectionLayout","direction","SectionLayout_SectionLayout","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","keys","length","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","CenteredSectionItem","EmptyList","button","description","props","objectWithoutProperties","CenteredSectionItem_CenteredSectionItem","justify","alignContent","marginBottom","align","color","colors","black","fontWeight","fontSize","xLarge","secondary","larger","actionName","EmptyList_EmptyList","ETaskStatus","tabs","value","IN_PROGRESS","label","CHECKED","DRAFT","DONE","columns","id","rows","region","address","step","Tasks","hasTableItems","section_layout","section_title","hidden","dist","Link","to","scheme","icon","icons_dist","list","margin","boxShadow","concat","lightGray","marginTop","baseUrl","padding","placeholder","fullWidth","data","Tasks_Tasks"],"mappings":"6kBAUO,IAAMA,EAA6C,SAAAC,GAAyB,IAAtBC,EAAsBD,EAAtBC,MAAOC,EAAeF,EAAfE,SAChE,OACIC,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CACIC,MAAI,EACJC,IAAKA,cAAFC,MAKHL,OAAAC,EAAA,IAAAD,CAACM,EAAA,EAAD,CACIC,QAAQ,EACRH,IAAKA,cAAFI,MAOHR,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CACIO,WAAS,EACTL,IAAK,SAAAM,GAAK,MAAK,CACXC,YAAaD,EAAME,QAAQ,GAC3BC,aAAcH,EAAME,QAAQ,MAGhCZ,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACW,IAAE,GACTd,OAAAC,EAAA,IAAAD,CAACe,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,OAC/BjB,OAAAC,EAAA,IAAAD,CAAA,YAAOF,KAGdC,MCxCrBmB,EAAAC,EAAAC,EAAA,sBAAAC,wNCMO,IAAMC,EAA0B,SAAAzB,GAAkB,IAAfE,EAAeF,EAAfE,SACtC,OACIC,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CACIO,WAAS,EACTc,UAAU,SACVnB,IAAKA,cAAFC,MAKFN,IChBbmB,EAAAC,EAAAC,EAAA,sBAAAI,sCCCe,SAAAC,EAAAC,EAAAC,GACf,SAAAD,EAAA,SACA,IACAE,EAAAC,EADAC,ECHe,SAAAJ,EAAAC,GACf,SAAAD,EAAA,SACA,IAEAE,EAAAC,EAFAC,EAAA,GACAC,EAAA/B,OAAAgC,KAAAN,GAGA,IAAAG,EAAA,EAAaA,EAAAE,EAAAE,OAAuBJ,IACpCD,EAAAG,EAAAF,GACAF,EAAAO,QAAAN,IAAA,IACAE,EAAAF,GAAAF,EAAAE,IAGA,OAAAE,EDTeK,CAA4BT,EAAAC,GAG3C,GAAA3B,OAAAoC,sBAAA,CACA,IAAAC,EAAArC,OAAAoC,sBAAAV,GAEA,IAAAG,EAAA,EAAeA,EAAAQ,EAAAJ,OAA6BJ,IAC5CD,EAAAS,EAAAR,GACAF,EAAAO,QAAAN,IAAA,GACA5B,OAAAsC,UAAAC,qBAAAC,KAAAd,EAAAE,KACAE,EAAAF,GAAAF,EAAAE,IAIA,OAAAE,EAjBAZ,EAAAC,EAAAC,EAAA,sBAAAK,iUEMO,IAAMgB,EAAgC,SAAA5C,GAAkB,IAAfE,EAAeF,EAAfE,SAC5C,OACIC,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CACIC,MAAI,EACJW,IAAE,EACFV,IAAKA,cAAFC,MAOFN,ICJA2C,EAAuC,SAAA7C,GAA8C,IAA3CC,EAA2CD,EAA3CC,MAAO6C,EAAoC9C,EAApC8C,OAAQC,EAA4B/C,EAA5B+C,YAAgBC,EAAY7C,OAAA8C,EAAA,EAAA9C,CAAAH,EAAA,kCAC9F,OACIG,OAAAC,EAAA,IAAAD,CAAC+C,EAAD,KACI/C,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMO,WAAS,EAACuC,QAAQ,SAASC,aAAa,SAAS1B,UAAU,UAC7DvB,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACC,IAAK,SAAAM,GAAK,MAAK,CAAEwC,aAAcxC,EAAME,QAAQ,MACpDZ,OAAAC,EAAA,IAAAD,CAACe,EAAA,EAAD,CACIE,UAAU,MACVkC,MAAM,SACN/C,IAAK,SAAAM,GAAK,MAAK,CACX0C,MAAO1C,EAAM2C,OAAOC,MACpBC,WAAY,IACZC,SAAU9C,EAAM8C,SAASC,UAG7BzD,OAAAC,EAAA,IAAAD,CAAA,YAAOF,KAGfE,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACC,IAAK,SAAAM,GAAK,MAAK,CAAEwC,aAAcxC,EAAME,QAAQ,MACpDZ,OAAAC,EAAA,IAAAD,CAACe,EAAA,EAAD,CACIE,UAAU,MACVkC,MAAM,SACN/C,IAAK,SAAAM,GAAK,MAAK,CACX0C,MAAO1C,EAAM2C,OAAOK,UACpBF,SAAU9C,EAAM2C,OAAOM,UAG3B3D,OAAAC,EAAA,IAAAD,CAAA,WAAM4C,GAAe,uJACrB5C,OAAAC,EAAA,IAAAD,CAAA,WAAM6C,EAAMe,cAGpB5D,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,GACNH,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMO,WAAS,EAACuC,QAAQ,SAASC,aAAa,UAC1CjD,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,GAAEwC,QC9CpCzB,EAAAC,EAAAC,EAAA,sBAAAyC,sCCAO,IAAKC,yGCAZ5C,EAAAC,EAAAC,EAAA,sBAAA0C,2aCqBA,IAAMC,EAAe,CACjB,CAAEC,MAAOF,IAAYG,YAAaC,MAAO,+CACzC,CAAEF,MAAOF,IAAYK,QAASD,MAAO,iEACrC,CAAEF,MAAOF,IAAYM,MAAOF,MAAO,0DACnC,CAAEF,MAAOF,IAAYO,KAAMH,MAAO,uEAGhCI,EAAqB,CACvB,CAAEC,GAAI,QAASL,MAAO,+FACtB,CAAEK,GAAI,SAAUL,MAAO,wCACvB,CAAEK,GAAI,cAAeL,MAAO,wCAC5B,CAAEK,GAAI,UAAWL,MAAO,6EACxB,CAAEK,GAAI,OAAQL,MAAO,4BACrB,CAAEK,GAAI,OAAQL,MAAO,0FAGnBM,EAAiB,CACnB,CACI1E,MAAO,+CACP2E,OAAQ,8CACRC,QAAS,sMACTC,KAAM,GAEV,CACI7E,MAAO,+CACP2E,OAAQ,8CACRC,QAAS,sMACTC,KAAM,GAEV,CACI7E,MAAO,+CACP2E,OAAQ,8CACRC,QAAS,sMACTC,KAAM,IAIDC,EAAuC,WAChD,IAAMC,IAAkBL,EAAKvC,OAE7B,OACIjC,OAAAC,EAAA,IAAAD,CAAC8E,EAAA,EAAD,KACI9E,OAAAC,EAAA,IAAAD,CAAC+E,EAAA,EAAD,CAAcjF,MAAM,mFAChBE,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAAC6E,QAASH,GAChB7E,OAAAC,EAAA,IAAAD,CAACiF,EAAA,aAAD,CACIhE,UAAWiE,IACXC,GAAG,SACHnE,QAAQ,YACRlB,MAAM,wFACNsF,OAAO,OACPC,KAAMrF,OAAAC,EAAA,IAAAD,CAACsF,EAAA,QAAD,MACNlF,IAAKA,cAAFC,UAMbwE,GACE7E,OAAAC,EAAA,IAAAD,CAACuF,EAAA,EAAD,CACIzF,MAAM,gEACN8D,WAAW,wFACXjB,OACI3C,OAAAC,EAAA,IAAAD,CAACiF,EAAA,aAAD,CACIhE,UAAWiE,IACXC,GAAG,SACHE,KAAMrF,OAAAC,EAAA,IAAAD,CAACsF,EAAA,QAAD,MACNxF,MAAM,wFACNM,IAAKA,cAAFI,OAKXoC,YAAY,mMAGnBiC,GACG7E,OAAAC,EAAA,IAAAD,CAACM,EAAA,EAAD,CACIC,QAAQ,EACRH,IAAK,SAAAM,GAAK,MAAK,CACX8E,OAAQ9E,EAAME,QAAQ,GACtB6E,UAAS,WAAAC,OAAahF,EAAME,QAAQ,GAA3B,KAAA8E,OACLhF,EAAM2C,OAAOsC,UADR,kBAKb3F,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CACIO,WAAS,EACTc,UAAU,MACVnB,IAAK,SAAAM,GAAK,MAAK,CAAEkF,UAAWlF,EAAME,QAAQ,MAE1CZ,OAAAC,EAAA,IAAAD,CAACiF,EAAA,YAAD,CAAalB,KAAMA,EAAM8B,QAAQ,SAC7B7F,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CACIO,WAAS,EACTc,UAAU,SACVnB,IAAK,SAAAM,GAAK,MAAK,CAAEoF,QAASpF,EAAME,QAAQ,MAExCZ,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMO,WAAS,EAACc,UAAU,MAAMX,QAAS,GACrCZ,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACW,IAAE,GACTd,OAAAC,EAAA,IAAAD,CAACiF,EAAA,WAAD,CAAYc,YAAY,qCAAYC,WAAS,KAEjDhG,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACW,GAAI,GACXd,OAAAC,EAAA,IAAAD,CAACiF,EAAA,YAAD,CAAac,YAAY,wFAAkBC,WAAS,KAExDhG,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACW,GAAI,GACXd,OAAAC,EAAA,IAAAD,CAACiF,EAAA,YAAD,CAAac,YAAY,wFAAkBC,WAAS,MAG5DhG,OAAAC,EAAA,IAAAD,CAACE,EAAA,EAAD,CAAMC,MAAI,EAACC,IAAK,SAAAM,GAAK,MAAK,CAAEoF,QAASpF,EAAME,QAAQ,MAC/CZ,OAAAC,EAAA,IAAAD,CAACiF,EAAA,aAAD,CAAcX,QAASA,EAAS2B,KAAMzB,WCjI1EtD,EAAAC,EAAAC,EAAA,0BAAA8E","file":"static/js/4.5f3a2ab8.chunk.js","sourcesContent":["/** @jsx jsx */\n\nimport { css, jsx } from \"@emotion/core\";\nimport * as React from \"react\";\nimport { Grid, Paper, Typography } from \"@material-ui/core\";\n\ninterface ISectionTitleProps {\n    title: string;\n}\n\nexport const SectionTitle: React.FC<ISectionTitleProps> = ({ title, children }) => {\n    return (\n        <Grid\n            item\n            css={css`\n                height: var(--section-title-height);\n                box-shadow: 0 6px 20px rgba(220, 227, 235, 0.3);\n            `}\n        >\n            <Paper\n                square={true}\n                css={css`\n                    height: 100%;\n                    display: flex;\n                    align-items: center;\n                    box-shadow: none !important;\n                `}\n            >\n                <Grid\n                    container\n                    css={theme => ({\n                        paddingLeft: theme.spacing(4),\n                        paddingRight: theme.spacing(4),\n                    })}\n                >\n                    <Grid item xs>\n                        <Typography variant=\"h4\" component=\"div\">\n                            <span>{title}</span>\n                        </Typography>\n                    </Grid>\n                    {children}\n                </Grid>\n            </Paper>\n        </Grid>\n    );\n};\n","export * from \"./SectionTitle\";\n","/** @jsx jsx */\n\nimport { jsx, css } from \"@emotion/core\";\nimport * as React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nexport const SectionLayout: React.FC = ({ children }) => {\n    return (\n        <Grid\n            container\n            direction=\"column\"\n            css={css`\n                width: 100%;\n                min-height: 100vh;\n            `}\n        >\n            {children}\n        </Grid>\n    );\n};\n","export * from \"./SectionLayout\";\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","/** @jsx jsx */\n\nimport { css, jsx } from \"@emotion/core\";\nimport * as React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nexport const CenteredSectionItem: React.FC = ({ children }) => {\n    return (\n        <Grid\n            item\n            xs\n            css={css`\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                align-items: center;\n            `}\n        >\n            {children}\n        </Grid>\n    );\n};\n","/** @jsx jsx */\n\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { jsx } from \"@emotion/core\";\nimport { CenteredSectionItem } from \"components/centered-section-item\";\nimport * as React from \"react\";\n\ninterface IEmptyListProps {\n    title: string;\n    button: React.ReactNode;\n    actionName: string;\n    description?: string;\n}\n\nexport const EmptyList: React.FC<IEmptyListProps> = ({ title, button, description, ...props }) => {\n    return (\n        <CenteredSectionItem>\n            <Grid container justify=\"center\" alignContent=\"center\" direction=\"column\">\n                <Grid item css={theme => ({ marginBottom: theme.spacing(3) })}>\n                    <Typography\n                        component=\"div\"\n                        align=\"center\"\n                        css={theme => ({\n                            color: theme.colors.black,\n                            fontWeight: 300,\n                            fontSize: theme.fontSize.xLarge,\n                        })}\n                    >\n                        <span>{title}</span>\n                    </Typography>\n                </Grid>\n                <Grid item css={theme => ({ marginBottom: theme.spacing(3) })}>\n                    <Typography\n                        component=\"div\"\n                        align=\"center\"\n                        css={theme => ({\n                            color: theme.colors.secondary,\n                            fontSize: theme.colors.larger,\n                        })}\n                    >\n                        <div>{description || \"Для создания нажмите кнопку\"}</div>\n                        <div>{props.actionName}</div>\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <Grid container justify=\"center\" alignContent=\"center\">\n                        <Grid item>{button}</Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </CenteredSectionItem>\n    );\n};\n","export * from \"./EmptyList\";\n","export enum ETaskStatus {\n    IN_PROGRESS = \"in-progress\",\n    CHECKED = \"checked\",\n    DRAFT = \"draft\",\n    DONE = \"done\",\n}\n","export * from \"./ETaskStatus\";\n","/** @jsx jsx */\n\nimport { css, jsx } from \"@emotion/core\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { Link, RouteComponentProps } from \"@reach/router\";\nimport { SectionLayout } from \"components/section-layout\";\nimport { SectionTitle } from \"components/section-title\";\nimport {\n    CustomButton,\n    IColumn,\n    InputField,\n    ITab,\n    SelectField,\n    TableWrapper,\n    TabsWrapper,\n} from \"@magnit/components\";\nimport { AddIcon } from \"@magnit/icons\";\nimport { ETaskStatus } from \"../../entities\";\nimport { EmptyList } from \"components/list\";\n\nconst tabs: ITab[] = [\n    { value: ETaskStatus.IN_PROGRESS, label: \"В работе\" },\n    { value: ETaskStatus.CHECKED, label: \"На проверке\" },\n    { value: ETaskStatus.DRAFT, label: \"Черновики\" },\n    { value: ETaskStatus.DONE, label: \"Завершенные\" },\n];\n\nconst columns: IColumn[] = [\n    { id: \"title\", label: \"Название задания\" },\n    { id: \"region\", label: \"Регион\" },\n    { id: \"office_part\", label: \"Филиал\" },\n    { id: \"address\", label: \"Адрес объекта\" },\n    { id: \"step\", label: \"Этап\" },\n    { id: \"date\", label: \"Срок выполнения\" },\n];\n\nconst rows: object[] = [\n    {\n        title: \"Задание 1\",\n        region: \"Марий Эл\",\n        address: \"г. Йошкар-Ола, Воскресенский Проспект 17\",\n        step: 1,\n    },\n    {\n        title: \"Задание 2\",\n        region: \"Марий Эл\",\n        address: \"г. Йошкар-Ола, Воскресенский Проспект 17\",\n        step: 2,\n    },\n    {\n        title: \"Задание 3\",\n        region: \"Марий Эл\",\n        address: \"г. Йошкар-Ола, Воскресенский Проспект 17\",\n        step: 3,\n    },\n];\n\nexport const Tasks: React.FC<RouteComponentProps> = () => {\n    const hasTableItems = !!rows.length;\n\n    return (\n        <SectionLayout>\n            <SectionTitle title=\"Список заданий\">\n                <Grid item hidden={!hasTableItems}>\n                    <CustomButton\n                        component={Link}\n                        to=\"create\"\n                        variant=\"contained\"\n                        title=\"Создать задание\"\n                        scheme=\"blue\"\n                        icon={<AddIcon />}\n                        css={css`\n                            width: 180px;\n                        `}\n                    />\n                </Grid>\n            </SectionTitle>\n            {!hasTableItems && (\n                <EmptyList\n                    title=\"Заданий нет\"\n                    actionName=\"Создать задание\"\n                    button={\n                        <CustomButton\n                            component={Link}\n                            to=\"create\"\n                            icon={<AddIcon />}\n                            title=\"Создать задание\"\n                            css={css`\n                                width: 180px;\n                            `}\n                        />\n                    }\n                    description=\"Для создания задания нажмите кнопку\"\n                />\n            )}\n            {hasTableItems && (\n                <Paper\n                    square={true}\n                    css={theme => ({\n                        margin: theme.spacing(3),\n                        boxShadow: `0px 0px ${theme.spacing(2)} ${\n                            theme.colors.lightGray\n                        } !important`,\n                    })}\n                >\n                    <Grid\n                        container\n                        direction=\"row\"\n                        css={theme => ({ marginTop: theme.spacing(2) })}\n                    >\n                        <TabsWrapper tabs={tabs} baseUrl=\"tasks\">\n                            <Grid\n                                container\n                                direction=\"column\"\n                                css={theme => ({ padding: theme.spacing(3) })}\n                            >\n                                <Grid container direction=\"row\" spacing={2}>\n                                    <Grid item xs>\n                                        <InputField placeholder=\"Поиск ...\" fullWidth />\n                                    </Grid>\n                                    <Grid item xs={2}>\n                                        <SelectField placeholder=\"Выберите регион\" fullWidth />\n                                    </Grid>\n                                    <Grid item xs={2}>\n                                        <SelectField placeholder=\"Выберите филиал\" fullWidth />\n                                    </Grid>\n                                </Grid>\n                                <Grid item css={theme => ({ padding: theme.spacing(3) })}>\n                                    <TableWrapper columns={columns} data={rows} />\n                                </Grid>\n                            </Grid>\n                        </TabsWrapper>\n                    </Grid>\n                </Paper>\n            )}\n        </SectionLayout>\n    );\n};\n","export * from \"./Tasks\";\n"],"sourceRoot":""}